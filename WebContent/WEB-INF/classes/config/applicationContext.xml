<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/task  
       http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">   
   
	<!-- 不扫描@controller -->
	<context:component-scan base-package="com.trans">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 加载jdbc.properties文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		lazy-init="false">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
				<value>classpath:config/redis.properties</value>
			</list>
		</property>
	</bean>
	<!-- 数据库配置 -->
	<!-- parent -->
	<bean id="parentDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="minPoolSize" value="${min}" />
		<property name="maxPoolSize" value="${max}" />
		<property name="maxIdleTime" value="${maxIdleTime}" />
		<property name="acquireIncrement" value="${acquireIncrement}" />
		<property name="maxStatements" value="${maxStatements}" />
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${testConnectionOnCheckout}" />
	</bean>
	<!-- master -->
	<bean id="masterDataSource" parent="parentDataSource">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- dataSource -->
	<bean id="dataSource" class="com.trans.pixel.utils.DataSources">
		<property name="targetDataSources">
		<map key-type="java.lang.String">
				<entry value-ref="masterDataSource" key="master"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="masterDataSource"></property>
	</bean>

	<!-- sessionFactory -->
	<!-- 配置mybitasSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!-- 		<property name="configLocation" value="classpath:/config/mybatis.xml" /> -->
		<property name="typeAliasesPackage" value="com.trans.pixel.model" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.trans.pixel.model.mapper" />
	</bean>

<!-- 	配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置注解实现管理事务（cglib：proxy-target-class="true"） -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<!-- 定时任务注解启动 -->
	<task:annotation-driven />
		
	<!-- redis 配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxActive" value="${redis.maxActive}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
	</bean>
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
		p:database="${redis.default.db}" p:timeout="${redis.timeout}" 
		p:usePool="true" p:pool-config-ref="poolConfig" />
		<!-- p:usePool="true" -->

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
				<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean> 
    
</beans>  