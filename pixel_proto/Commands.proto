package com.trans.pixel.protoc;

////////// Base
message UserInfo {
	required int64 id = 1;
	optional string account = 2;
	optional string session = 32;
	optional int32 icon = 13;
	optional string name = 3;
	optional int32 serverId = 4;
	optional int32 unionId = 14;
	optional string unionName = 64;
	optional int32 unionJob = 15;
	optional int32 vip = 19;
	optional int32 jewel = 5;
	optional int64 coin = 6;
	optional int64 exp = 7;
	optional int32 pointPVP = 8; //挂机PVP积分
	optional int32 pointLadder = 9; //天梯积分
	optional int32 pointExpedition = 10; //远征积分
	optional int32 pointUnion = 11; //公会积分
	optional int32 areaEnergy = 26;//疲劳
	optional int64 areaEnergyTime = 16;//上次疲劳恢复时间
	optional int64 freeLotteryCoinTime = 17; //免费金币抽取倒计时
	optional int32 freeLotteryCoinLeftTime = 61; //免费金币抽取剩余次数
	optional int64 freeLotteryJewelTime = 18; //免费钻石抽取倒计时
	optional int64 freeContractTime = 63; //免费契约倒计时
	optional int32 ladderPurchaseTimes = 60;//天梯购买次数
	optional int32 ladderModeLeftTimes = 12;//每日天梯挑战剩余次数
	optional int32 PVPMineLeftTime = 20;//pvp矿点对手免费刷新次数
	optional int32 signCount = 21;//累积签到次数
	optional int32 loginDays = 22;//累积登录天数
	optional string lastSignTime = 23;//上次签到时间
	optional int32 zhanli = 24;
	optional string lastLoginTime = 25;//上次登录时间
	optional int32 heroLimit = 31;//英雄上限
	optional string composeSkill = 33;//组合技
	optional int32 rechargeRecord = 34;
	optional int32 vipLibao1 = 35;
	optional int32 vipLibao2 = 36;
	optional string registerTime = 37;
	optional int32 totalSignCount = 38;
	optional int32 firstGetHeroId = 39;
	optional string greenhand = 40;
	optional int32 advance = 41;
	optional int32 shouchongIsComplete = 42;
	optional int32 shouchongIsGetReward = 43;
	repeated JewelPool growJewelCount = 56;//成长钻石基金可领
	repeated JewelPool growExpCount = 57;//成长经验基金可领
	optional int32 skill = 58;
	optional int32 failed = 59;
	optional int32 purchaseContractLeft = 62;
	optional int32 zhanliMax = 65;
	optional int32 sevenLoginDays = 66;
	optional int32 sevenSignStatus = 67;
	repeated UnionBossRecord unionBossRecord = 68;
	optional int32 unionIcon = 69;
	optional int32 lotteryCoinCount = 70;
	optional int32 task1Order = 71;
	optional int32 task2Record = 72;
	optional int32 questStatus = 73;//是否参与过问卷调查
	optional int32 zhaohuanshi = 74;//召唤石
	optional uint32 zhujueExp = 75;
	optional uint32 vipExp = 76;
	optional int32 merlevel = 77;
	optional uint32 useTalentId = 78;
	optional int64 extraTimeStamp = 79;
	optional uint32 extraCount1 = 80;
	optional uint32 extraCount2 = 81;
	optional uint32 extraCount3 = 82;
	optional int64 extraHasLootTime = 83;
	optional uint32 extraType = 84;
	optional int64 extraLastTimeStamp = 85;
	optional uint32 userType = 86;//0:普通， 1:非R， 2：小R  3，中R， 4：大R
}

message CostItem {
	optional int32 costid = 1;
	optional int32 costcount = 2;
	optional uint32 show = 3;
	optional uint32 order = 4;
}

message JewelPool {
	optional int32 order = 1;
	optional int32 zhanli = 2;
	optional string description = 3;
	optional int32 rewardid = 4;
	optional int32 rewardcount = 5;
	optional int32 rewarded = 6;
	optional int32 recharged = 7;
}

message JewelPoolList {
	repeated JewelPool order = 1;
}

message UnionBossUserRecord {
	optional int64 userId = 1;
        optional int32 percent = 2;
}

message UnionBossRecord {
	optional int32 bossId = 1;
	optional int32 hp = 2;
	optional string endTime = 3;
	optional int32 myAttackHp = 4;
	repeated UserRank ranks = 5;
	optional string startTime = 6;
	optional int32 count = 7;
	optional int32 percent = 8;
	repeated UnionBossUserRecord userRecord = 9;
}

message Rank {
	required UserInfo user = 1;
	required int32 score = 2;
	optional int32 rank = 3;
}

message UserTalent {
	required int32 id = 1;
	required int32 level = 2;
	repeated UserTalentOrder skill = 4;
	repeated UserTalentEquip equip = 5;
	optional uint32 exp = 6;//当前一级的经验，升级之后清0
}

message TeamEngine {
	optional uint32 id = 1;
	optional string composeSkill = 2;
}

message Team {
        optional UserInfo user = 1;
        repeated HeroInfo heroInfo = 2;
        optional UserTalent userTalent = 4;
        optional int32 rolePosition = 5;
	repeated TeamEngine teamEngine = 6;
}

message UserTalentOrder {
	required int32 order = 1;
	required int32 skillId = 2;
	optional int32 level = 3;
}

message UserTalentEquip {
	optional int32 position = 1;
	optional int32 itemId = 2;
	optional int32 level = 3;
}

message UserRank {
	optional int64 rank = 1;
	optional int32 dps = 2;
	optional Team team = 3;
	optional int64 userId = 4;
	optional string userName = 5;
	optional uint32 zhanli = 6;
	optional uint32 icon = 7;
	optional uint32 vip = 8;
}

message ClearInfo {
	required int32 position = 1;
	required int32 clearId = 2;
	required int32 count = 3;
	optional int32 id = 4;
	optional int32 rare = 5;
}

message SkillInfo {
	required int32 skillId = 1;
	required int32 skillLevel = 2;
}

message UserEquipPokede {
	required int32 itemId = 1;
	required int32 level = 2;
	optional uint32 order = 3;
}

message HeroInfo {
	optional int64 infoId = 1;
	optional int32 level = 2;
	optional int32 rare = 3;
	optional int32 equipId = 4;
	repeated SkillInfo skill = 5;
	optional int32 value = 6;
	optional int32 star = 7;
	optional int32 heroId = 8;
	optional int32 position = 9;//useless
	optional bool isLock = 10;
	optional int32 count = 11;
	repeated ClearInfo clear = 12;
	optional int32 strengthen = 13;
	optional int32 rank = 14;
	optional string fetters = 15;
	optional UserEquipPokede equipPokede = 16;
}

message RewardInfo {
	optional int32 itemid = 1;
	optional string itemname = 2;
	optional int64 count = 3;
	optional int32 weight = 4;
	optional int32 counta = 5;
	optional int32 countb = 6;
	optional string item = 7;
	optional uint32 eventid = 8;
	optional uint32 rmbid = 9;
}

message MultiReward {
	optional int32 id = 1;
	optional string name = 2;
	repeated RewardInfo loot = 3;
}

message Task {
        optional uint32 targetid = 1;
        optional string name = 2;
        optional string des = 3;
        optional uint32 targetcount = 4;
        repeated RewardInfo reward = 5;
}

////////// ShopProto
message ContractWeightList {
	repeated ContractWeight quality = 1;
}

message ContractWeight {
	optional int32 quality = 1;
	optional int32 ishero = 2;
	repeated RewardInfo count = 3;
	optional int32 weightall = 4;
}

message ContractRewardList {
	repeated ContractReward reward = 1;
}

message ContractReward {
	optional int32 id = 1;
	optional int32 rewardid = 2;
	optional int32 count = 3;
}

message Commodity {
	required int32 itemid = 1;
	optional string name = 2;
	required int32 count = 3;
	required int32 currency = 4;
	required int32 cost = 5;
	optional int32 will = 6;
	optional bool isOut = 7;
	optional int32 id = 8;
	optional int32 sortid = 9;
	optional int32 judge = 10;
	optional int32 discount = 11;
	optional int32 discost = 12;
}
message CommodityList {
	repeated Commodity id = 1;
}
message ShopList {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshTime = 3;//刷新
}
message ShopRefresh {
	optional int32 count = 1;
	optional int32 count1 = 2;
	optional int32 currency = 3;
	optional int32 cost = 4;
}
message ShopRefreshList {
	repeated ShopRefresh id = 1;
}
message Will {
	required int32 will = 1;
	optional int32 position = 3;
}
message ShopWill {
	required int32 id = 1;
	optional int32 merlevel = 2;
	repeated Will will = 3;
}
message ShopWillList {
	repeated ShopWill id = 1;
}

message LadderDaily {
	optional int32 id = 1;
	optional int32 ranking = 2;
	optional int32 ranking1 = 3;
	repeated RewardInfo order = 4; 
}
message LadderDailyList {
	repeated LadderDaily id = 1;
}
message LadderChongzhi {
	optional int32 count = 1;
	optional int32 currency = 2;
	optional int32 cost = 3;
}
message LadderChongzhiList {
	repeated LadderChongzhi count = 1;
}

message Cdkey {
	required int32 id = 1;
	optional string name = 2;
	optional int32 itemid1 = 3;
	optional int32 count1 = 4;
	optional int32 itemid2 = 5;
	optional int32 count2 = 6;
	optional int32 itemid3 = 7;
	optional int32 count3 = 8;
	repeated RewardInfo reward = 9;
	optional int32 currentCount = 10;
	optional int32 count = 11;
	optional int32 length = 12;
	optional int32 used = 13;
}
message CdkeyList {
	repeated Cdkey cdkey = 1;
}

message MultiRewardList {
	repeated MultiReward region = 2;
}

message PurchaseCoinReward {
	optional int32 daguan = 1;
	optional int32 rewardid1 = 2;
	optional int32 count11 = 3;
	optional int32 count12 = 4;
	optional int32 rewardid2 = 5;
	optional int32 count21 = 6;
	optional int32 count22 = 7;
}

message PurchaseCoinRewardList {
	repeated PurchaseCoinReward gold = 1;
}

message PurchaseCoinCost {
	optional int32 count = 1;
	optional int32 currency = 2;
	optional int32 cost = 3;
}

message PurchaseCoinCostList {
	repeated PurchaseCoinCost gold = 1;
}

message RequestDailyShopCommand {//普通商店
}
message RequestDailyShopPurchaseCommand {//普通商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestDailyShopRefreshCommand {//普通商店刷新
}
message ResponseDailyShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestShopCommand {//商城
}
message RequestShopPurchaseCommand {//商城购买
	required int32 id = 1;//商品ID
}
message ResponseShopCommand {
	repeated Commodity items = 1;//商品列表
}

message RequestBlackShopCommand {//黑市
}
message RequestBlackShopPurchaseCommand {//黑市购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestBlackShopRefreshCommand {//黑市刷新
}
message ResponseBlackShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestUnionShopCommand {//公会商店
}
message RequestUnionShopPurchaseCommand {//公会商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestUnionShopRefreshCommand {//公会商店刷新
}
message ResponseUnionShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestRaidShopCommand {//挂机副本商店
}
message RequestRaidShopPurchaseCommand {//挂机副本商店购买
        required int32 index = 1;//第几个商品(0~7)
        required int32 id = 2;
}
message RequestRaidShopRefreshCommand {//挂机副本商店刷新
}
message ResponseRaidShopCommand {
        repeated Commodity items = 1;//商品列表
        optional int64 endTime = 2;//商品列表过期时间
        optional int32 refreshCost = 3;//刷新消耗
}

message RequestPVPShopCommand {//挂机PVP商店
}
message RequestPVPShopPurchaseCommand {//挂机PVP商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestPVPShopRefreshCommand {//挂机PVP商店刷新
}
message ResponsePVPShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestExpeditionShopCommand {//远征商店
}
message RequestExpeditionShopPurchaseCommand {//远征商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestExpeditionShopRefreshCommand {//远征商店刷新
}
message ResponseExpeditionShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestLadderShopCommand {//天梯商店
}
message RequestLadderShopPurchaseCommand {//天梯商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestLadderShopRefreshCommand {//天梯商店刷新
}
message ResponseLadderShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestBattletowerShopCommand {//战斗塔商店
}
message RequestBattletowerShopPurchaseCommand {//战斗塔商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestBattletowerShopRefreshCommand {//战斗塔商店刷新
}
message ResponseBattletowerShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message YueKa {
	required int32 itemid = 1;
	optional int32 rewardid = 2;
	optional int32 rewardcount = 3;
	optional int32 count = 4;
	optional string name = 5;
	optional int32 rewardid1 = 6;
	optional int32 rewardcount1 = 7;
	optional int32 jingyan_per = 9;
}
message YueKaList {
	repeated YueKa item = 1;
}

message Libao {
	optional int32 id = 1;
	optional int32 rechargeid = 2;
	optional int32 purchase = 3;
	optional string starttime = 4;
	optional string endtime = 5;
	optional string validtime = 6;
	optional int32 refresh = 7;
}
message LibaoList {
	repeated Libao id = 3;
}
message RequestLibaoShopCommand {//vip礼包商店
}
message ResponseLibaoShopCommand {
	repeated Libao items = 1;//商品列表
}

message Status {
	optional int32 id = 1;
	optional bool canpurchase = 2;
}
message ResponseFirstRechargeStatusCommand {
	repeated Status status = 1;
}

message RequestPurchaseContractCommand {//灵魂契约(获得pts和经验)
	required int32 heroid = 1;
}

message RequestPurchaseCoinCommand {//点石成金(获得金币和经验)
}

message ResponsePurchaseCoinCommand {
	//optional int32 coin = 1;//获得的金币
	//optional int32 exp = 2;//获得的经验
	optional int32 jewel = 3;//价格
	optional int32 leftTime = 4;//当日剩余次数
	optional int32 totalTime = 5;//次数
}
////////// HeroProto
message UserHero {
	required int64 userId = 1;
	required int32 heroId = 2;
	repeated HeroInfo heroInfo = 3;
}

message FenjieHeroInfo {
	required int32 heroId = 1;
	required int64 infoId = 2;
}

message HeroRareLevelupList {
	repeated HeroRareLevelup id = 1;
}

message HeroRareLevelup {
	optional int32 id = 1;
	optional int32 position = 2;
	repeated HeroRareLevelupRank rank = 3;	
}

message HeroRareLevelupRank {
	optional int32 rank = 1;
	optional int32 equip1 = 4;
	optional int32 count1 = 5;
	optional int32 equip2 = 6;
	optional int32 count2 = 7;
	optional int32 equip3 = 8;
	optional int32 count3 = 9;
	optional int32 levelrequire = 15;
}

message HeroFettersOrderList {
	repeated HeroFettersOrder order = 1;
}

message HeroFettersOrder {
	optional int32 order = 1;
	optional int32 id = 2;
	repeated HeroFetters fetters = 3;
}

message HeroFetters {
	optional int32 fettersid = 1;
	optional string fettersdes = 2;
	repeated HeroFetter hero = 3;
}

message HeroFetter {
	optional int32 heroid = 1;
	optional int32 herostar = 2;
	optional int32 herorank = 3;
}

message HeroChoiceList {
	repeated HeroChoice id = 1;
}

message HeroChoice {
	required int32 order = 1;
	required int32 id = 2;
	required uint32 event1 = 4;
	required uint32 event2 = 5;
	required uint32 event3 = 6;
	required uint32 event4 = 7;
	required uint32 event5 = 8;
}

message ClearLevelList {
	repeated ClearLevel level = 1;
}

message ClearLevel {
	optional int32 level = 1;
	optional int32 zhanli = 2;
	optional int32 count = 3;
}

message ClearFoodList {
	repeated ClearFood food = 1;
}

message ClearFood {
	optional int32 id = 1;
	optional int32 count = 2;
	optional int32 cost = 3;
}

message ClearHeroList {
	repeated ClearHero hero = 1;
}

message ClearHero {
	optional int32 id = 1;
	optional int32 handbook = 2;
	optional int32 verylove1 = 3;
	optional int32 love1 = 4;
	optional int32 love2 = 6;
	optional int32 normal1 = 5;
	optional int32 normal2 = 7;
	optional int32 normal3 = 8;
}

message ClearAttributeList {
	repeated ClearAttribute attribute = 1;
}

message ClearAttribute {
	optional int32 id = 1;
	optional int32 position = 2;
	optional int32 zuanshi = 3;
	repeated ClearAttributeOrder order = 4;
}

message ClearAttributeOrder {
	optional int32 order = 1;
	optional int32 type = 2;
	optional int32 weight = 3;
	optional int32 count1 = 4;
	optional int32 count2 = 5;
	optional int32 interval = 6;
	optional int32 rare = 7;
}

message ClearCostList {
	repeated ClearCost id = 1;
}

message ClearCost {
	optional int32 id = 1;
	optional int32 quality = 2;
	optional int32 itemid1 = 3;
	optional int32 itemcount1 = 4;
	optional int32 itemid2 = 5;
	optional int32 itemcount2 = 6;
	optional int32 itemid3 = 7;
	optional int32 itemcount3 = 8;
}

message AllheroData {
	repeated AllheroList id = 1;
}

message AllheroList {
	optional int32 id = 1;
	optional string name = 2;
	optional int32 img = 3;
	optional int32 rare = 4;
	repeated Allhero hero = 5;
}

message Allhero {
	optional int32 heroid = 1;
}

message TalentOrder {
	optional int32 order = 1;
	optional int32 skill1 = 2;
	optional int32 skill2 = 3;
	optional int32 skill3 = 4;
}

message Talent {
	optional int32 id = 1;
	optional string name = 2;
	optional string img = 3;
	repeated TalentOrder order = 4;
}

message TalentList {
	repeated Talent id = 1;
}

message Talentupgrade {
	optional int32 level = 1;
	optional int32 itemid = 2;
	optional int32 itemcount = 3;
}

message TalentupgradeList {
	repeated Talentupgrade level = 1;
}

message Talentunlock {
	optional int32 order = 1;
	optional int32 level = 2;
}

message TalentunlockList {
	repeated Talentunlock order = 1;
}

message UserTalentList {
	repeated UserTalent userTalent = 1;
}

message UserTalentSkill {
	required int32 talentId = 1;
	required int32 orderId = 2;
	required int32 skillId = 3;
	required int32 level = 4;
}

message HeroList {
	repeated Hero id = 1;
}

message Hero {
	optional int32 id = 1;
	optional string name = 2;
	optional int32 img = 3;
	optional string description = 4;
	optional int32 quality = 5;
	optional int32 position = 6;
	optional int32 handbook = 7;
	optional int32 hp = 8;
	optional int32 vit = 9;
	optional int32 power = 10;
	optional int32 def = 11;
	optional int32 ad = 12;
	optional int32 ap = 13;
	optional int32 arm = 14;
	optional int32 mr = 15;
	repeated HeroSkill skill = 16;
}

message HeroSkill {
	optional int32 skillid = 1;
	optional string skill = 2;	
	optional int32 unlock = 3;
}

message UpgradeList {
	repeated Upgrade level = 1;
}

message Upgrade {
	optional int32 level = 1;
	optional int32 sp = 2;
	optional int64 exp = 3;
	optional float hp = 4;
	optional float arm = 5;
	optional float mr = 6;
	optional float ad = 7;
	optional float ap = 8;
}

message UserFood {
	required int32 foodId = 1;
	required int32 count = 2;
}

message StrengthenList {
	repeated Strengthen id = 1;
}

message Strengthen {
	optional int32 id = 1;
	optional int32 zhanli_per = 2;
	optional int32 itemid = 3;
	optional int32 count = 4;
	optional int32 success = 5;
}

message HerolootList {
	repeated Heroloot id = 1;
}

message Heroloot {
	optional int32 itemid = 1;
	optional int32 heroid = 2;
	optional int32 star = 3;
	optional int32 count = 4;
	optional string name = 5;
	optional string description = 6;
}

message RequestLockHeroCommand {
	required int32 heroId = 2;
	required int64 infoId = 3;
	optional bool isLock = 4;
}

message RequestHeroLevelUpToCommand {
	required int32 levelUp = 1;
	required int32 heroId = 2;
	required int64 infoId = 3;
}

message RequestHeroLevelUpCommand {
	required int32 levelUpType = 1; //1:level 2:star 3:rare 4:skill
	required int32 heroId = 2;
	required int64 infoId = 3;
	optional int32 skillId = 4;
	repeated int64 costInfoId = 5;
}

message ResponseHeroResultCommand {
	required int32 heroId = 1;
	repeated HeroInfo heroInfo = 2;
}

message ResponseDeleteHeroCommand {
	repeated FenjieHeroInfo heroInfo = 1;
}

message RequestResetHeroSkillCommand {
	required int32 heroId = 1;
	required int64 infoId = 2;
}

message UserTeam {
	required int64 id = 1;
	required string teaminfo = 2;
	repeated TeamEngine teamEngine = 3;
	optional uint32 rolePosition = 4;
	optional uint32 talentId = 5;
}

message RequestGetTeamCommand {
	required int64 userId = 1;
}

message ResponseGetTeamCommand {
	required Team team = 1;
}

message TeamUnlock {//出战人数解锁
	required int32 id = 1;//普通关卡id
	required int32 count = 2;//出战人数
}

message RequestUpdateTeamCommand {
	required int64 id = 1;
	required string teamInfo = 2;
	optional int32 rolePosition = 4;
	repeated TeamEngine teamEngine = 5;
	optional uint32 talentId = 6;
}

message RequestUserTeamListCommand {

}

message ResponseUserTeamListCommand {
	repeated UserTeam userTeam = 1;
}

message TeamUnlockList {
	repeated TeamUnlock xiaoguan = 1;
}

message ResponseGetUserHeroCommand {
	repeated HeroInfo userHero = 1;
}

message RequestFenjieHeroCommand {
	repeated FenjieHeroInfo fenjieHero = 1;
}

message RequestUserPokedeCommand {

}

message ResponseUserPokedeCommand {
	repeated HeroInfo pokede = 1;
}

message RequestBuyHeroPackageCommand {
	
}

message RequestSubmitComposeSkillCommand {
	required string composeSkill = 1;
}

message RequestFeedFoodCommand {
	required int32 heroId = 1;
	required int32 foodId = 2;
	required int32 foodCount = 3;
}

message RequestClearHeroCommand {
	required int32 heroId = 1;
	required int32 position = 2;
	required int32 type = 3;
	optional int32 count = 4;
}

message ResponseUserFoodCommand {
	repeated UserFood userFood = 1;
}

message ResponseClearInfoCommand {
	repeated ClearInfo clearInfo = 1;
}

message RequestChoseClearInfoCommand {
	required bool refused = 1;
	optional int32 id = 2;
}

message RequestHeroStrengthenCommand {
	required int32 heroId = 1;
}

message RequestOpenFetterCommand {
	required int32 heroId = 1;
	required int32 fetterid = 2;	
}

message RequestZanHeroMessageBoardCommand {
        required int32 itemId = 1;
        required string id = 2;
        required bool zan = 3;//true:dianzan false:quxiao
}

message RequestTalentupgradeCommand {
	required int32 id = 1;
}

message RequestTalentChangeUseCommand {
	required int32 id = 1;
}

message RequestTalentChangeSkillCommand {
	required int32 id = 1;
	required int32 order = 2;
	required int32 skillId = 3;
}

message ResponseUserTalentCommand {
	repeated UserTalent userTalent = 1;
	repeated UserTalentSkill userTalentSkill = 2;
}
////////// EquipProto
message PropList {
	repeated Prop loot = 1;
}

message Prop {
	optional int32 itemid = 1;
	optional string name = 2;
	optional int32 img = 3;
	optional int32 rare = 4;
	optional int32 cost = 5;
	//optional string description = 5;
	optional int32 hashero = 6;
	optional int32 judge = 7;
	optional string endtime = 8;
	optional int32 bossid = 9;
	optional int32 itemcount = 10;
	optional int32 weightall = 11;
	repeated RewardInfo item = 12;
	optional uint32 autoopen = 13;
}

message ChipList {
	repeated Chip id = 1;
}

message Chip {
	required int32 itemid = 1;
	required string itemname = 2;
	required int32 img = 3;
	required int32 rare = 4;
	required int32 cost = 5;
	optional string description = 7;
	optional int32 aim = 8;
	optional int32 count = 9;
	optional int32 lootid1 = 10;
	optional int32 loot1 = 11;
	optional int32 lootid2 = 12;
	optional int32 loot2 = 13;
	optional int32 lootid3 = 14;
	optional int32 loot3 = 15;
}

message MaterialList {
	repeated Material id = 1;
}

message Material {
	optional uint32 id = 1;
	optional string name = 2;
	optional uint32 img = 3;
	optional uint32 rare = 4;
	optional uint32 cost = 5;
	optional uint32 des = 6;
	optional string endtime = 7;
}

message EquipList {
	repeated Equip data = 1;
}

message Equip {
	optional int32 id = 1;
	optional int32 level = 3;
	optional int32 type = 6;
	optional int32 ilevel = 11;
	optional uint32 irare = 12;
	optional uint32 heroid = 13;
	repeated EquipOrder list = 14;
}

message EquipOrder {
	optional uint32 order = 1;
	optional string name = 2;
	optional string des = 3;
	optional uint32 handbook = 4;
	optional uint32 equiplevel = 5;
	optional uint32 rare = 6;
	optional uint32 img = 7;
	optional uint32 ad = 8;
	optional uint32 ap = 9;
	repeated EquipState states = 10;
}

message EquipState {
	optional uint32 stateid = 1;
	optional string statename = 2;
	optional uint32 para1 = 3;
	optional uint32 para2 = 4;
	optional uint32 skill = 5;
	optional uint32 skilllevel = 6;
}

message EquiptucaoList {
	repeated Equiptucao equip = 1;
}

message Equiptucao {
	optional int32 itemid = 1;
	optional string itemname = 2;
	optional int32 rare = 3;
}

message SynthetiseList {
	repeated Synthetise id = 1;
}

message Synthetise {
	required uint32 id = 1;
	required uint32 target = 6;
	required uint32 needid = 7;
	repeated SynthetiseCover cover = 8;
}

message SynthetiseCover {
	required uint32 cover = 1;
	required uint32 count = 2;
}

message RequestAddHeroEquipCommand {
	required int32 heroId = 1;
	required int64 infoId = 2;
	optional int32 equipId = 3;
}

message RequestEquipComposeCommand {
	required int32 levelUpId = 1;
	optional int32 count = 2;
}

message ResponseEquipComposeCommand {
	required int32 equipId = 1;
	required int32 count = 2;
}

message ResponseGetUserEquipCommand {
        repeated UserEquip userEquip = 1;
}

message ArmorList {
	repeated Armor data = 1;
}

message Armor {
	optional int32 id = 1;
	optional uint32 ilevel = 2;
	optional int32 level = 3;
	optional int32 irare = 4;
	optional int32 type = 6;
	optional uint32 heroid = 7;
	repeated EquipOrder list = 14;
}

message EquipIncreaseList {
	repeated EquipIncrease level = 1;
}

message EquipIncrease {
	optional int32 level = 1;
	optional float increase = 2;
	optional int32 rate = 3;
	optional int32 zero = 4;
}

message IncreaseLevelList {
	repeated IncreaseLevel level = 1;
}

message IncreaseLevel {
	optional int32 level = 1;
	repeated IncreaseRare rare = 2;
}

message IncreaseRare {
	optional int32 rare = 1;
	repeated CostItem cost = 2;
}

message Item {
	required int32 itemId = 1;
	required int32 itemCount = 2;
}

message RequestSaleEquipCommand {
	repeated Item item = 1;
}

message RequestSubmitZhanliCommand {
	required int32 zhanli = 1;
}

message UserEquip {
	required int32 equipId = 1;
	required int32 equipCount = 2;
}

message UserProp {
	required int32 propId = 1;
	required int32 propCount = 2;
	optional string expiredTime = 3;
}

message ResponseUserPropCommand { //玩家道具列表
	repeated UserProp userProp = 1;
}

message RequestUsePropCommand { //打开道具包
	required int32 propId = 1;
	required int32 propCount = 2;
}

message ResponseUsePropCommand {
	repeated UserProp userProp = 1;
}

message RequestFenjieEquipCommand {
	required int32 equipId = 1;
	required int32 equipCount = 2;
}

message ResponseEquipResultCommand {
	repeated UserEquip userEquip = 1;
}

message RequestEquipStrenthenCommand {
	required int32 itemId = 1;
}

message RequestEquipPokedeCommand {

}

message ResponseEquipPokedeCommand {
	repeated UserEquipPokede userEquipPokede = 1; 
}

message RequestTalentChangeEquipCommand {
	required int32 id = 1;
	required int32 position = 2;
	required int32 itemId = 3;
}

message RequestSynthetiseComposeCommand {
	required uint32 synthetiseId = 1;
}
////////// PVPProto
message PVPMonsterReward {//pvp怪物奖励
	required int32 id = 1;
	optional string name = 2;
	repeated PVPMonsterRewardLoot loot = 3;
}
message PVPMonsterRewardLoot {
	optional int32 weightall = 1;
	optional int32 itemid = 2;
	optional int32 counta = 3;
	optional float countb = 4;
	optional int32 weighta = 5;
	optional float weightb = 6;
	optional int32 order = 7;
}
message PVPMonsterRewardList {
	repeated PVPMonsterReward enemy = 1;
}

message PVPMonster {//pvp怪物Config
	required int32 id = 1;
	optional string name = 2;
	optional int32 boss = 3;//站立
	optional int32 fieldid = 4;//区域ID
	optional int32 buffcount = 5;//增加的buff层数
	optional int32 weight = 12;//出现几率
	optional int32 x = 8;//坐标x
	optional int32 y = 9;//坐标y
	optional int32 positionid = 10;
	optional int32 level = 11;
	optional string starttime = 13;
	optional string endtime = 14;
}
message PVPMonsterList {
	repeated PVPMonster id = 1;
}

message PVPBoss {
	required int32 id = 1;
	optional int32 day = 2;
}
message PVPBossList {
	repeated PVPBoss boss = 1;
}

message PVPDayConfig {
	optional int32 day = 1;
}
message PVPBossConfig {
	required int32 id = 1;
	repeated PVPDayConfig day = 2;
}
message PVPBossConfigList {
	repeated PVPBossConfig id = 1;
}

message PVPPosition {//pvp位置
	required int32 order = 1;
	optional int32 x = 2;//坐标x
	optional int32 y = 3;//坐标y
}
message PVPPositionList {
	optional int32 fieldid = 1;
	repeated PVPPosition order = 3;
}
message PVPPositionLists {
	repeated PVPPositionList id = 1;
}

message PVPMine {//pvp矿点
	required int32 id = 1;
	optional int32 x = 2;
	optional int32 y = 3;
	optional int32 type = 4;
	optional int32 yield = 5;//产量
	optional int64 enemyid = 6;
	optional UserInfo owner = 8;//占领者
	optional int64 endTime = 9;
	optional int32 level = 10;//每一级提升防守方战斗力5%
	optional string img = 11;
	optional int32 pvpyield = 12;
}

message PVPMap {
	optional int32 fieldid = 1;
	optional string name = 2;
	optional int32 bufflimit = 6;//buff层数上限
	optional int32 yield = 7;//基础产量
	optional int32 merlevel = 8;
	optional int32 buffid = 9;//buffid
	optional int32 buff = 10;//buff层数
	optional bool opened = 11;//是否开放
	optional string img = 12;
	optional string buffimg = 13;
	repeated PVPMine kuangdian = 3;
	repeated PVPMonster monster = 4;
}
message PVPMapList {
	repeated PVPMap field = 1;
	optional int32 buff = 2;
}

message RequestUnlockPVPMapCommand {//解锁PVP区域
	required int32 fieldid = 1;
	required int32 zhanli = 2;
}

message RequestRefreshPVPMapCommand {
	
}

message RequestPVPMapListCommand {//挂机PVP列表
}

message RequestAttackPVPMonsterCommand {//pvp攻击怪物
	required int32 positionid = 1;
	optional bool ret = 2;
	optional int32 time = 3;
}

message RequestPVPMineInfoCommand {//pvp矿点对手信息
	required int32 id = 1;
}

message ResponsePVPMineInfoCommand {
	optional Team team = 5;
	optional PVPMine mineInfo = 3;
}

message RequestAttackPVPMineCommand {//攻击pvp矿点对手
	required int32 id = 1;
	required int64 teamid = 2;
	optional bool ret = 3;
	optional int32 time = 4;
}

message RequestHelpAttackPVPMineCommand {//攻击pvp矿点对手
	required int32 id = 1;
	required int64 teamid = 2;
	optional bool ret = 3;
	required int64 userId = 4;
	optional int32 time = 5;
}

message RequestHelpLevelCommand {//帮助小弟过关
	required int32 id = 1;
	required int64 teamid = 2;
	optional bool ret = 3;
	required int64 userId = 4;
}

message RequestSendMailCommand {
	required int64 toUserId = 1;
	required string content = 2;
	optional int32 relatedId = 3;
	required int32 type = 4; //5:call brother	
}

message RequestBrotherMineInfoCommand {
	required int32 id = 1;
	required int64 brotherId = 2;
}	

message RequestRefreshPVPMineCommand {//刷新pvp矿点对手
	required int32 id = 1;
}

message ResponsePVPMapListCommand {//挂机PVP列表
	repeated PVPMap field = 1;
	optional int64 endTime = 2;
	optional int32 buff = 3;
}
////////// AreaProto
message WeightReward {
	optional int32 order = 100;
	optional int32 itemcount = 1;
	optional int32 weightall = 2;
	optional int32 itemid1 = 3;
	optional int32 count1a = 4;
	optional float count1b = 5;
	optional int32 weight1a = 6;
	optional float weight1b = 8;
	optional string itemid2 = 9;
	optional string count2a = 10;
	optional string count2b = 11;
	optional string weight2a = 12;
	optional string weight2b = 13;
	optional string itemid3 = 14;
	optional string count3a = 15;
	optional string count3b = 16;
	optional string weight3a = 17;
	optional string weight3b = 18;
}

message AreaMonsterReward {
	required int32 id = 1;
	repeated WeightReward loot = 2;
}

message AreaMonsterRewardList {
	repeated AreaMonsterReward region = 1;
}

message AreaRankReward {
	required int32 ranking = 1;
	optional int32 itemid1 = 2;
	optional int32 count1 = 3;
	optional int32 itemid2 = 4;
	optional int32 count2 = 5;
	optional int32 itemid3 = 6;
	optional int32 count3 = 7;
	repeated RewardInfo reward = 8;
}

message AreaBossReward {
	required int32 id = 1;
	optional string name = 2;
	repeated AreaRankReward ranking = 3;
}

message AreaBossRewardList {
	repeated AreaBossReward boss = 1;
}

message AreaInfo {//可争夺区域
	required int32 id = 1;//区域ID
	optional string name = 2;
	optional int32 zhanli = 3;//开放所需等级
	optional bool opened = 7;//是否开放
	repeated AreaResource resources = 4;//区域资源点
	repeated AreaBoss bosses = 5;//区域BOSS
	repeated AreaMonster monsters = 6;//区域怪物
	optional int32 level = 8;
	optional int32 zhanlicount = 9;
}

message AreaMode {//区域争夺
	repeated AreaInfo region = 1;//区域
}

message AreaEquip {//区域道具
	required int32 id = 1;//道具ID
	optional string name = 2;//名称
	optional int32 img = 3;//形象ID
	optional string description = 4;//描述
	optional int32 type = 5;//适用区域
	optional int32 layer = 6;//限制层数
	optional int32 time = 7;//持续时间
	optional int32 skill = 8;//对应技能
	optional int32 count = 10;//拥有数量
	optional int64 primaryId = 12;
}

message AreaBuffList {
	repeated AreaBuff skill = 1;
}
message AreaBuff {//区域BUFF
	optional int32 belongto = 5;//适用区域
	optional int32 skillid = 8;//对应技能
	optional int32 level = 9;//当前层数
	optional int32 time = 10;//持续时间
	optional int64 endTime = 11;//结束时间
	optional int32 countlimit = 12;//层数上限
	optional int32 bufftype = 13;//buff所属
}

message AreaEquipList {
	repeated AreaEquip equip = 1;
}

message AreaResource {//区域资源点
	required int32 id = 1;//资源点ID
	required string name = 2;
	optional int32 belongto = 3;//区域ID
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	optional int32 yield = 6;//开采产量
	optional int32 bossid = 8;//资源点BOSS
	optional int32 state = 10;//争夺状态:0正常，1准备战斗
	optional int64 endtime = 11;//该阶段结束时间
	optional int64 starttime = 18;//该阶段开始报名时间
	optional int64 closetime = 19;//该阶段结束报名时间
	optional UserInfo owner = 12;//占领玩家
	optional int32 attackerId = 13;//进攻公会
	optional int32 warDefended = 14;//抵挡波数
	repeated UserInfo attacks = 15;//进攻方
	repeated UserInfo defenses = 16;//防守方
	repeated string message = 17;//进攻信息
	optional int64 lastRewardTime = 20;//上轮奖励发放时间
}

message AreaResourceList {
	repeated AreaResource region = 1;
}

message AreaBoss {//区域世界BOSS
	required int32 id = 1;
	required string name = 2;
	optional int32 belongto = 3;//区域ID
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	optional int32 positionid = 13;//坐标
	optional int32 group = 6;
	optional int32 hpMax = 7;//最大血量
	optional int32 turn = 8;//回合限制
	optional int32 count = 9;//次数限制
	optional int32 pl = 10;
	optional string img = 11;
	optional int32 bosslv = 12;
	optional int32 hp = 14;//当前血量
	optional UserInfo owner = 15;//击杀者
	repeated Rank ranks = 16;//伤害排行
}

message AreaBossList {
	repeated AreaBoss region = 1;
}

message AreaRefresh {
	required int32 level = 1;
	required int32 time = 2;
	required int32 limit = 3;
}

message AreaRefreshList {
	repeated AreaRefresh level = 1;
}

message AreaRefresh2 {
	required int32 time = 1;
	required int32 group = 2;
	required int32 count = 3;
	required int32 condition = 4;
	optional int32 enemyid = 5;
}

message AreaRefresh2List {
	required int32 id = 1;
	repeated AreaRefresh2 time = 2;
}

message AreaRefresh2Lists {
	repeated AreaRefresh2List region = 1;
}

message AreaMonster {//区域怪物
	required int32 id = 1;
	required string name = 2;
	optional int32 belongto = 3;//区域ID
	optional int32 positionid = 9;
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	optional int32 level = 8;
	optional int32 level1 = 11;
	optional int32 weight = 10;
	optional int32 pl = 12;
	optional float level2 = 13;
}

message AreaMonsterList {
	repeated AreaMonster region = 1;
	optional int32 weightall = 2;
}

message Position {
	optional int32 position = 1;
	optional int32 x = 2;
	optional int32 y = 3;
}

message AreaPosition {
	required int32 id = 1;
	repeated Position position = 2;
}

message AreaPositionList {
	repeated AreaPosition region = 1;
}

message FightDamage {
	required int64 userId = 1;
	required int32 damage = 2;
}

message FightResult {
	required int32 result = 1;
	optional FightDamage win = 2;
	optional FightDamage lose = 3;
}

message FightResultList {
	repeated FightResult list = 1;
}

message RequestAreaCommand {//区域争夺
}

message RequestRefreshAreaCommand {//重置区域
}

message RequestUnlockAreaCommand {//解锁区域
	required int32 id = 1;
	required int32 zhanli = 2;
}

message ResponseAreaCommand {
	repeated AreaInfo areas = 1;
	optional int64 endTime = 3;
	optional bool hasreward = 2;
}

message RequestAreaResourceCommand {//区域info
	required int32 resourceId = 1;
}

message ResponseAreaResourceCommand {
	required AreaResource resource = 1;
}

message RequestUseAreaEquipCommand {
	required int32 equipId = 1;
}

message ResponseAreaEquipCommand {
	repeated AreaEquip equips = 1;
	repeated AreaBuff buffs = 2;
}

message RequestIsAreaOwnerCommand {

}

message ResponseIsAreaOwnerCommand {
	optional bool isOwner = 1;
}

message RequestAttackMonsterCommand {//区域争夺打怪物
	required int32 positionid = 1;
	optional bool ret = 2;
}

message RequestAttackBossCommand {//区域争夺攻击世界BOSS
	required int32 id = 1;
	required int32 score = 2;
}

message RequestAttackResourceCommand {//区域争夺刺杀领主/争夺领主
	required int32 id = 1;
	optional bool ret = 2;
}

message RequestAttackResourceMineCommand {//区域争夺占领矿点
	required int32 id = 1;
	required int64 teamid = 2;
	required bool ret = 3;
}

message RequestCollectResourceMineCommand {//区域争夺收取矿点
	optional int32 mineId = 1;
}

message RequestAttackResourceMineInfoCommand {//区域争夺矿区队伍信息
	required int32 id = 1;
}

message ResponseAttackResourceMineInfoCommand {
	repeated HeroInfo heroInfo = 1;
	optional UserInfo user = 2;
}
////////// MohuaProto
message MohuaCard {
	required int32 cardId = 1;
	required int32 cardCount = 2;
}

message MohuaUserData { //魔化之地模式的用户存档
	required int32 mapid = 1; //地图ID
	required int32 crystal = 2; //用户的水晶数
	required int32 stage = 3;//当前阶段
	repeated MohuaCard card = 4;//用户的卡片存储
	repeated int32 rewardStage = 5;//阶段奖励领取的记录
	required int32 consumehp = 6;//BOSS血量百分比
	repeated int32 rewardHp = 7;//血量奖励领取的阶段
	repeated HeroInfo hero = 8;//队伍信息	
	required string enemyName = 9;//对手名字
	repeated HeroInfo enemyHero = 10;//对手的队伍信息
	required int32 selfhp = 11;//自己的血量百分比
}

message MohuaMapStage { //魔化之地的每一阶段信息
	required int32 stage = 1;//阶段数
	required int32 turn = 2;//回合数
	required int32 crystal = 3;//进入当前回合领取的水晶数
	required int32 randomcard = 4;//该回合可以随机的卡片数量
}

message MohuaMapStageList { //魔化之地地图信息
	required int32 mapid = 1;//地图ID
	required string mapname = 2;//地图名字
	required int32 maxcrystal = 3;//用户可以达到的最大水晶数
	repeated MohuaMapStage stage = 4;//魔化之地所有的阶段信息
}

message MohuaMap {//魔化之地
	repeated MohuaMapStageList mohua = 1;
}

message MohuaCardRoot {
	repeated MohuaCardMap mohua = 1;
}

message MohuaCardMap {
	required int32 mapid = 1;
	required string mapname = 2;
	repeated MohuaCardSkill skill = 3;
	repeated MohuaCardStage stage = 4;
}

message MohuaCardSkill {
	required int32 card = 1;
	required int32 weight = 2;
}

message MohuaCardStage {
	required int32 stage = 1;
	required int32 specialcard = 2;
}

message MohuaJieduan {
	repeated MohuaJieduanMap mohua = 1;
}

message MohuaJieduanMap {
	required int32 mapid = 1;
	required string mapname = 2;
	repeated MohuaJieduanStage stage = 3;
}

message MohuaJieduanStage {
	required int32 stage = 1;
	repeated MohuaItem item = 2;
}

message MohuaItem {
	required int32 item = 1;
	required int32 itemcount = 2;
}

message MohuaLootHp {
	required int32 consumehp = 1;
	repeated MohuaItem carduse = 2;
}

message MohuaLootMap {
	required int32 mapid = 1;
	required string mapname = 2;
	repeated MohuaLootHp hp = 3;
}

message MohuaLoot {
	repeated MohuaLootMap mohua = 1;
}

message RequestEnterMohuaMapCommand {//进入魔化之地

}

message RequestEndMohuaMapCommand {//结束魔化之地

}

message RequestStartMohuaMapCommand {//开始魔化之地

}

message RequestUseMohuaCardCommand {//魔化之地模式中使用卡片
	repeated MohuaCard card = 1;
}

message RequestMohuaStageRewardCommand {//魔化之地stage奖励领取
	required int32 stage = 1;
}

message RequestMohuaHpRewardCommand {//魔化之地HP奖励领取
	required int32 consumehp = 1;
}

message RequestMohuaSubmitStageCommand {//魔化之地提交记录
	required int32 hp = 2;
	required int32 selfhp = 3;
}

message ResponseMohuaUserDataCommand {
	optional MohuaUserData user = 1;
}
////////// RechargeProto
message Qiandao {
	repeated Sign order = 1;
	required int32 id = 2;
	required string activity = 3;
}

message SignList_special {
	repeated Sign id = 1;
}

message SignList {
	repeated Sign order = 1;
}

message Sign {
	required int32 order = 1;
	optional int32 targetid = 3;
	optional int32 targetcount = 4;
	optional int32 itemid = 5;
	optional int32 count = 7;
	repeated RewardInfo reward = 8;
}

message RequestSevenLoginSignCommand {
	optional int32 chooseId = 1;
}

message VipLibao {
	optional int32 itemid = 1;
	optional string name = 2;
	optional string img = 3;
	optional int32 rare = 4;
	optional string description = 5;
	optional int32 value = 6;
	optional int32 cost = 7;
	repeated RewardInfo order = 8;
}

message VipLibaoList {
	repeated VipLibao id = 1;
}

message VipInfo {
	optional int32 vip = 1;
	optional int32 rmb = 2;
	optional string effect = 3;
	optional int32 dianjin = 4;
	optional int32 tianti = 5;
	optional int32 pvp = 6;
	optional int32 quyu = 7;
	optional int32 mohua = 8;
	optional int32 baoxiang = 9;
	optional int32 zhibao = 10;
	optional int32 baohu = 11;
	optional int32 libao1 = 12;
	optional int32 libao2 = 13;
	optional int32 zuanshi = 14;
	optional int32 contract = 15;
}

message VipList {
	repeated VipInfo vip = 1;
}

message Rmb {
	required int32 id = 1;
	required int32 rmb = 2;
	required int32 itemid = 3;
	required int32 zuanshi = 4;
	optional string name = 5;
	optional string description = 6;
	optional string img = 7;
	optional int32 type = 8;
	optional int32 zuanshi1 = 9;
	optional int32 costid = 10;
}

message RmbList {
	repeated Rmb id = 1;
}

message ShouchongList {
	repeated Shouchong id = 1;
}

message Shouchong {
	required int32 id = 1;
	required string activity = 2;
	required int32 targetid = 3;
	repeated RewardInfo reward = 5;
}

message RequestCdkeyCommand {
	required string key = 1;
}

message RequestSubmitIconCommand {
	required int32 icon = 1;
}

message RequestCheatRechargeCommand {
	optional int32 itemid = 1;
}

message RequestRechargeCommand {
	required int32 itemid = 1;
}

message RequestBindAccountCommand {
	required string oldAccount = 1;
	required string newAccount = 2;
}

message RequestPurchaseVipLibaoCommand {
	required int32 vip = 1;
	required int32 type = 2;
}

message RequestQueryRechargeCommand {
	optional string orderId = 1;	
}

message RequestShouchongRewardCommand {

}

message RequestGetGrowJewelCommand {
	required int32 order = 1;
}
message RequestGetGrowExpCommand {
	required int32 order = 1;
}

message RequestSignCommand {
	
}

message ResponseSignCommand {
	repeated RewardInfo reward = 1;
}
////////// MessageBoardProto
message MessageBoard {
	required int64 id = 1;
	required int64 timestamp = 2;
	required int64 userId = 3;
	required string userName = 4;
	required string content = 5;
	repeated Msg msg = 6;
	required int32 icon = 7;
	optional int32 vip = 8;
	optional int32 job = 9;//公会职位
	optional int32 groupId = 10;
	optional int32 bossId = 11;
	optional string startDate = 12;
	optional int32 replyCount = 13;
}

message Msg {
	required int32 id = 1;
	required string content = 2;
}

message Notice {
	required int32 type = 1;//1:system mail 2:friend 3:achieve 4:activity 5:maintask 6:dailytask 7:niticeboard
	repeated int64 noticeId = 2;//留言板的id
}

message ResponseNoticeCommand {
	repeated Notice notice = 1;
	repeated string message = 2;	
}

message RequestQueryNoticeBoardCommand {
	required string messageId = 1;
}

message RequestHeartBeatCommand {

}

message RequestGreenhandCommand {
	optional string greenhand = 1;
	optional int32 advance = 2;
	optional int32 skill = 3;
	optional int32 failed = 4;
	optional bool result = 5;
}

message RequestLogCommand {
	required int32 logtype = 1; //0:login 5:recharge
	optional string phoneuuid = 2;
	optional int32 logintype = 3;
	optional string platform = 4;
	optional string vendor = 5;
	optional string model = 6;
	optional string version = 7;
	optional int32 currency = 8;
	optional int32 currencyamount = 9;
	optional int32 stage = 10;
	optional int32 itemid = 11;
	optional int32 action = 12;
	optional string channel = 14;
	optional int32 rechargetype = 15;
	optional string idfa = 16;
}

message RequestMessageBoardListCommand { //获取所有留言板信息
	required int32 type = 1; //1:普通的 2:公会的 3:英雄
	optional int32 itemId = 2;//type=3时需要
}

message ResponseMessageBoardListCommand {
	required int32 type = 1;
	repeated MessageBoard messageBoard = 2;
}

message RequestCreateMessageBoardCommand { //创建一个新的留言板
	required int32 type = 1;
	optional string message = 2;
	optional int32 groupId = 3;
	optional int32 bossId = 4;
	optional int32 fightId = 5;
	optional int32 itemId = 6;//英雄和装备ID
}

message RequestReplyMessageCommand { //回复留言板
	required int32 type = 1;
	required string id = 2;
	required string message = 3;
}

message ResponseMessageBoardCommand {
	required int32 type = 1;
	required MessageBoard messageBoard = 2;
}
////////// ActivityProto
enum ACTIVITY_TYPE{
	TYPE_LEIJI_LOGIN = 1;
	TYPE_LEIJI_RECHARGE = 2;
	TYPE_LEIJI_COST_JEWEL = 3;
	TYPE_VIP = 4;
	TYPE_LOTTERY = 5;
	TYPE_HERO_GET = 6;
	TYPE_HERO_LEVELUP_50 = 7;
	TYPE_LEVEL = 8;
	TYPE_ZHANLI = 9;
	TYPE_LADDER_SUCCESS = 10;
	TYPE_PVP_ATTACK_SUCCESS = 11;
	TYPE_MOJING_GET = 12;
	TYPE_REWARDTASK = 13;
	TYPE_SHENYUAN = 14;
	TYPE_WUQI_GET = 15;
	TYPE_EQUIP_LEVELUP_10 = 16;
	TYPE_PVP_HELP = 17;
	TYPE_DANBI_RECHARGE = 18;
	TYPE_HERO_RAREUP = 19;
	TYPE_EVENT_COMPLETE = 21;
	TYPE_TEAMUP_ARUISI = 10000;
	TYPE_ARUISI_SKILL1_LEVELUP = 10001;
	TYPE_ARUISI_EQUIP_ADD10001 = 10002;
	TYPE_ARUISI_SKILL2_LEVELUP = 10003;
	TYPE_TASK_LEVEL = 10100;
	TYPE_ADD_CHAFENQI = 10200;
	TYPE_PVP_BUFF_LEVELUP5 = 10300;
	TYPE_EQUIP_LEVELUP1 = 10401;
	TYPE_EQUIP_LEVELUP3 = 10403;
	TYPE_EQUIP_LEVELUP5 = 10405;
	TYPE_EQUIP_LEVELUP10 = 10410;
	TYPE_UPHERO_QUALITY1 = 10501;
	TYPE_UPHERO_QUALITY2 = 10502;
	TYPE_UPHERO_QUALITY3 = 10503;
	TYPE_UPHERO_QUALITY4 = 10504;
	TYPE_UPHERO_QUALITY5 = 10505;
	TYPE_HERO_LEVELUP5 = 10605;
	TYPE_HERO_LEVELUP10 = 10610;
	TYPE_HERO_LEVELUP15 = 10615;
	TYPE_HERO_LEVELUP20 = 10620;
	TYPE_HERO_LEVELUP22 = 10622;
	TYPE_HERO_LEVELUP25 = 10625;
	TYPE_HERO_LEVELUP30 = 10630;
	TYPE_HERO_LEVELUP35 = 10635;
	TYPE_HERO_LEVELUP40 = 10640;	
	TYPE_HERO_LEVELUP45 = 10645;
	TYPE_HERO_LEVELUP50 = 10650;
	TYPE_HERO_LEVELUP55 = 10655;
	TYPE_HERO_LEVELUP60 = 10660;
	TYPE_FIGHT_FUBEN = 10700;
	TYPE_HERO_RAREUP1 = 10801;	
	TYPE_HERO_RAREUP2 = 10802;	
	TYPE_HERO_RAREUP3 = 10803;	
	TYPE_HERO_RAREUP5 = 10805;	
	TYPE_HERO_RAREUP7 = 10807;	
	TYPE_HERO_RAREUP9 = 10809;	
	TYPE_HERO_RAREUP11 = 10811;	
	TYPE_HERO_RAREUP12 = 10812;	
	TYPE_HERO_RAREUP13 = 10813;	
	TYPE_HERO_RAREUP15 = 10815;	
	TYPE_ZHUJUE_LEVELUP = 10900;
	TYPE_ZHUJUE_LEVELUP5 = 11005;
	TYPE_FETTERS_OPEN = 11100;
	TYPE_GET_HERO = 121;
	TYPE_TASK_HERO_RAREUP = 122;
	TYPE_EVENT_COMPLETE_DAILY = 201;
	TYPE_REWARDTASK_COMPLETE = 202;
	TYPE_KILL_MONSTER = 203;
	TYPE_DUOHUI_MINE = 204;
	TYPE_EQUIP_LEVELUP = 205;
	TYPE_SKILL_LEVELUP = 206;
	TYPE_LADDER_FIGHT = 207;
	TYPE_LOTTERY_COIN = 208;
	TYPE_PUTONGSHOP_BUY = 209;
	TYPE_FUBEN_KILL_BOSS = 210;
	TYPE_DAILY_ALL = 211;
}

message AchieveList {
	repeated Achieve id = 1; 
}

message Achieve {
	required uint32 id = 1;
	required string achievement = 2;
	required uint32 targetid = 3;
	repeated ActivityOrder order = 4;
}

message ActivityOrder {
	required uint32 order = 1;
	required string description = 2;
	required uint32 targetcount = 3;
	optional int32 targetcount1 = 17;
	optional int32 rewardid0 = 5;
	optional string rewardname0 = 6;
	optional int32 rewardcount0 = 7;
	optional int32 rewardid1 = 8;
	optional string rewardname1 = 9;
	optional int32 rewardcount1 = 10;
	optional int32 rewardid2 = 11;
	optional string rewardname2 = 12;
	optional int32 rewardcount2 = 13;
	optional int32 rewardid3 = 14;
	optional string rewardname3 = 15;
	optional int32 rewardcount3 = 16;
	optional int32 limit = 18;
	repeated RewardInfo reward = 20;
	optional uint32 consumeid = 19;
}

message RichangList {
	repeated Richang richang = 1;
}

message Richang {
	required int32 id = 1;
	required string activity = 2;
	required int32 targetid = 6;
	required string starttime = 3;
	required string endtime = 4;
	repeated ActivityOrder order = 5;
	optional string noserverid = 7;
	optional string serverid = 8;
	optional uint32 consumeid = 9;
}

message RewardOrder {
	required int32 order = 1;
	required int32 count = 2;
}

message UserRichang {
	required int32 type = 1;
	required int32 completeCount = 2;
	repeated RewardOrder reward = 4;
	repeated int32 rewardOrder = 3;
}

message UserAchieve {
	required int32 type = 1;
	required int32 completeId = 2;
	required int32 completeCount = 3;
}

message Kaifu2List {
	repeated Kaifu2 id = 1;
}

message Kaifu2 {
	required int32 id = 1;
	required string activity = 2;
	required int32 targetid = 3;
	required int32 lasttime = 4;	
	repeated ActivityOrder order = 5;	
}

message Kaifu2Rank {
	required int32 type = 1;
	repeated Rank rank = 2;
	required int64 myRank = 3;
}

message KaifuList {
	repeated Kaifu id = 1;
}

message Kaifu {
	required int32 id = 1;
	required string activity = 2;
	required int32 targetid = 3;
	required int32 lasttime = 4;
	repeated ActivityOrder order = 5;
	optional uint32 cycle = 6;
	optional uint32 consumeid = 7;
}

message KaifuOrder {
	optional uint32 order = 3;
	optional string description = 4;
	optional int32 targetcount = 1;
	optional int32 targetcount1 = 2;
	repeated RewardInfo reward = 5;
}

message UserKaifu {
        required int32 type = 1;
        required int32 completeCount = 2;
        repeated int32 rewardOrder = 3;
	repeated KaifuOrder orderRecord = 4;
	repeated RewardOrder reward = 5;	
}

message RequestAchieveRewardCommand {
	required int32 id = 1;
}

message RequestAchieveListCommand {

}

message ResponseAchieveListCommand {
	repeated UserAchieve userAchieve = 1;
}

message RequestRichangRewardCommand {
	required int32 id = 1;
	required int32 order = 2;
}

message RequestRichangListCommand {

}

message ResponseRichangListCommand {
	repeated UserRichang userRichang = 1;
}

message RequestKaifu2ActivityCommand {

}

message ResponseKaifu2ActivityCommand {
	repeated Kaifu2Rank rank = 1;
	required int32 accRcPs = 2;//累计充值人数
	required int32 accRcPsRwRc = 3;//全民福利的领取记录
}

message RequestKaifuRewardCommand {
        required int32 id = 1;
        required int32 order = 2;
}

message ResponseKaifuRewardCommand {
        repeated UserKaifu userKaifu = 1;
}

message RequestKaifuListCommand {

}

message ResponseKaifuListCommand {
        repeated UserKaifu userKaifu = 1;
	repeated Kaifu2Rank rank = 2;
	repeated UserRichang userRichang = 3;
}

message RequestRankCommand {
	required int32 type = 1;//1:ladder, 2:zhanli, 3:recharge, 4:help
}

message ResponseRankCommand {
	repeated UserRank userRank = 1;
}

message LotteryActivityList {
	repeated LotteryActivity lottery = 1;
}

message LotteryActivity {
	required int32 type = 1;
	required int32 cost = 2;
	required int32 count = 3;
	required int32 judge = 4;
	required string starttime = 5;
	required string endtime = 6;
	repeated LotteryItem item = 7;		
	optional string errordes = 8;
	optional int32 id = 9;
}

message LotteryItem {
	required int32 id = 1;
	required int32 itemid = 2;
	required int32 count = 3;
	required int32 weight = 4;
	required int32 will = 5;
}

message RequestLotteryCommand {
	required int32 type = 1; //1001:jinbi 1002:zuanshi
	optional int32 count = 2; //默认是10
}

message ActivityList {
	repeated Activity activity = 1;
}

message Activity {
	required int32 id = 1;
	required int32 type = 2;
	required int32 targetcount = 3;
	required string des = 4;
	required string starttime = 5;
	required string endtime = 6;
	required int32 activitytype = 7;
	repeated RewardInfo reward = 8;
	required string serverfilter = 9;
}

message SevenLoginList {
	repeated SevenLogin id = 1;
}

message SevenLogin {
	optional uint32 id = 1;
	optional uint32 targetid = 2;
	optional uint32 targetcount = 3;
	repeated SevenOrder order = 4;
}

message SevenOrder {
	optional uint32 order = 1;
	optional int32 itemid = 2;
	optional int32 count = 3;
	optional int32 choose = 4;
	optional uint32 rmbid = 5;
}

message RankvalueList {
	repeated Rankvalue rank = 1;
}

message Rankvalue {
	optional int32 rank = 1;
	optional int32 sp = 2;
	optional float def = 3;
	optional float vit = 4;
	optional float power = 5;
}
////////// LadderProto
message LadderWinReward {
	optional int32 id = 1;
	repeated LadderReward order = 2;
}
message LadderReward {
	optional int32 order = 1;
	optional int32 weight = 2;
	repeated RewardInfo reward = 3;
}

message LadderWinRewardList {
	repeated LadderWinReward id = 1;
}

message LadderRankingList {
	repeated LadderRanking ranking = 1;
}

message LadderRanking {
	required int32 rankink = 1;
	required int32 star = 2;
	required int32 lv = 3;
	required int32 rare = 4;
	required int32 herocount = 5;
}

message LadderNameList {
	repeated LadderName name = 1;
}

message LadderName {
	required int32 type = 1;
	required string name = 2;
}

message LadderEnemyList {
	repeated LadderEnemy ranking = 1;
}

message LadderEnemy {
	required int32 ranking = 1;
	required int32 ranking1 = 2;
	required int32 star = 3;
	required int32 lv = 4;
	required int32 rank = 5;
	required int32 herocount = 6;
	optional uint32 leadlv = 7;
	optional uint32 leadskill = 8;
	optional uint32 equip1 = 9;
	optional uint32 equip2 = 10;
	optional uint32 equip3 = 11;
	optional uint32 equip4 = 12;
	optional uint32 equip5 = 13;
	optional uint32 equip6 = 14;
	optional uint32 equip7 = 15;
	optional uint32 equip8 = 16;
	optional uint32 equip9 = 17;
	optional uint32 equip10 = 18;
	optional uint32 score = 19;
	optional uint32 score1 = 20;
}

message LadderEquipList {
	repeated LadderEquip data = 1;
}

message LadderEquip {
	required uint32 ladder = 1;
	required uint32 grade = 2;
}

message LadderModeList {
	repeated LadderMode data = 1;
}

message LadderMode {
	optional uint32 mode = 1;
	optional string name = 2;
	optional string des = 3;
	optional uint32 score = 4;
	optional float losepercent = 5;
	optional uint32 k = 6;
	repeated RewardInfo reward = 7;
	repeated LadderModeLevel level = 8;
}

message LadderModeLevel {
	required uint32 level = 1;
	required uint32 score = 2;
}

message LadderLd {
	optional uint32 targetid = 1;
	optional string name = 2;
	optional string des = 3;
	optional uint32 equipid = 4;
}

message LadderLdList {
	repeated LadderLd data = 1;
}

message LadderSeasonConfig {
	required uint32 season = 1;
	required string starttime = 2;
	required uint32 taskid = 3;
	repeated Task task = 4;
	repeated LadderMode ladder = 5;
	repeated LadderLd ld = 6;
}

message LadderSeasonConfigList {
	repeated LadderSeasonConfig data = 1;
}

message LadderSeason {
	required uint32 season = 1;
	required string startTime = 2;
	optional string endTime = 3;
}

message UserLadder {
	optional uint32 type = 1;//0：普通 1：乱斗
	optional uint32 score = 2;
	optional uint32 season = 3;//赛季
	optional uint32 taskProcess = 4;
	optional uint32 taskRewardProcess = 5;
	optional Team team = 6;
	optional uint32 position = 7;
	optional uint32 lastScore = 9;
	optional uint32 grade = 10;
	optional uint32 level = 11;
	optional uint32 seasonRewardStatus = 12;//0：未领取奖励 1：已领取
	optional uint32 lastSeason = 13;
}

message RequestLadderSeasonRewardCommand {

}

message RequestLadderEnemyCommand {
	optional uint32 type = 1;//0:normal 1:ld
}

message RequestLadderInfoCommand {
}

message RequestRefreshLadderEnemyCommand {
	required uint32 type = 1;
}

message ResponseEnemyLadderCommand {
	repeated UserLadder enemy = 1;
}

message RequestSubmitLadderResultCommand {
	required uint32 position = 1;
	required uint32 ret = 2;//0:win 1:lost 2:drow
	required uint32 type = 3;
}

message RequestLadderTaskRewardCommand {
}

message ResponseUserLadderCommand {
	repeated UserLadder user = 1;
}

message FightInfo {
	optional int32 id = 3;
	optional UserInfo enemy = 4;
	required string fightInfo = 1;
	required string fightData = 2;
}
message RequestGetFightInfoCommand {
}
message RequestFightInfoCommand {
	required FightInfo info = 1;
}
message ResponseFightInfoCommand {
	repeated FightInfo info = 1;
}

message RequestGetLadderRankListCommand {

}

message RequestGetUserLadderRankListCommand {

}

message ResponseGetLadderRankListCommand {
	repeated UserRank userRank = 1;
}

message ResponseGetUserLadderRankListCommand {
	repeated UserRank userRank = 1;
}

message RequestAttackLadderModeCommand {
	required int64 rank = 1;
	required bool ret = 2;
	required int64 teamId = 3;
	optional int64 attackUserId = 4;
}

message ResponseAttackLadderModeCommand {
	required bool ret = 1;
	required string msg = 2;
}

message RequestReadyAttackLadderCommand {

}

message RequestGetLadderUserInfoCommand {
	required uint64 rank = 1;
}

message RequestPurchaseLadderTimeCommand {
}

message ResponseGetLadderUserInfoCommand {
	required UserRank userRank = 1;
}
////////// UserInfoProto
message HeadInfo 
{
	enum SERVER_STATUS {
		SERVER_MAINTENANCE = 1;
	}
	
	required int32 version = 1;		//  0: version1.1.1 1: version1.2.0 2013-3-28
	required int64 datetime = 2;
	required int32 gameVersion = 3;
	required int32 serverId = 4;
	required string account = 5;
	optional int64 userId = 6;
	optional string session = 7;
	optional string serverstarttime = 8;
	optional int32 onlineStatus = 9;
	optional int32 serverStatus = 10;	
}

message ServerData {
	optional int64 AreaBossRefreshTime = 1;
}

message RewardCommand {
	optional int32 id = 1;//用于区分获得来源
	optional string title = 2;//弹窗标题
	repeated RewardInfo loot = 3;//奖励列表
}

message ResponseNeedRegisterCommand {

}

message RequestRegisterCommand {
	required string userName = 1;
	optional int32 icon = 2;
	required int32 heroId = 3;
}

message RequestUserInfoCommand {

}

message RequestExtraRewardCommand {
	required uint32 status = 1;//1：start 2:end 3:pause 4:continue 5:giveup
	optional uint32 extraType = 2; //1,2,3
}

message RequestLoginCommand {
}

message ResponseUserInfoCommand {
	required UserInfo user = 1;
}

message ResponseOtherUserInfoCommand {
	repeated UserInfo user = 1;
}

message UserHead {
	required int32 headId = 2;
}

message ResponseUserHeadCommand {
	repeated UserHead userHead = 1;
}

message ResponsePopupCommand {
	required int32 popScreen = 1;//1. main menu;
	optional string flowID = 2;
	required string text = 3;
	optional string heading = 4;
	optional string yesButtonID = 5;
	optional string noButtonID = 6;
}

message Merlevel {
	optional int32 level = 1;
	optional int32 score = 2;
}
message MerlevelList {
	repeated Merlevel level = 1;
}

message Area {
	optional int32 areaid = 1;
	optional string name = 2;
	repeated Daguan daguan = 3;
	optional int32 merlevel = 4;
}
message AreaList {
	repeated Area data = 1;
}
message Daguan {
	optional int32 id = 1;
	optional string name = 2;
	//optional string des = 3;
	optional int32 level = 3;
	optional int32 count = 4;
	optional int32 gold = 5;
	optional int32 exp = 6;
	optional int32 areaid = 9;
	optional int32 merlevel = 11;
	optional uint32 loot1 = 12;
	optional uint32 loot2 = 13;
	optional uint32 loot3 = 14;
	optional uint32 loot4 = 15;
	optional RewardInfo lootlist = 16;
}
message DaguanList {
	repeated Daguan data = 1;
}
message EventLevel {
	optional int32 level = 1;
	optional int32 count = 2;
}
message EventLevelList {
	repeated EventLevel level = 1;
}

message EventRandom {
	optional int32 level1 = 1;
        optional int32 count1 = 2;
	optional int32 level2 = 3;
        optional int32 count2 = 4;
	optional int32 level3 = 5;
        optional int32 count3 = 6;
	optional int32 level4 = 7;
        optional int32 count4 = 8;
}
message EventRandoms {
	optional int32 id = 1;
	repeated EventRandom order = 2;
}
message EventRandomsList {
	repeated EventRandoms id = 1;
}
message EventExp {
	optional int32 lv = 1;
	optional int32 itemid = 2;
	optional int32 count = 3;
}
message EventExpList {
	repeated EventExp id = 1;
}
message EventReward {
	optional int32 mustloot = 1;
	optional int32 lootcount = 2;
}
message EventCost {
	optional int32 costid = 1;
	optional int32 costcount = 2;
}
message EventQuestion {
	optional string answer = 2;
	optional int32 eventid = 3;
}
message Enemy {
	//optional int32 order = 1;
	optional int32 enemyid = 2;
	optional int32 enemycount = 3;
	optional int32 enemylv = 4;
	optional int32 lootweight = 5;
	optional int32 loot = 6;
	optional int32 count = 7;
}
message EnemyList {
	repeated Enemy data = 1;
}
message EventConfig {
	optional int32 id = 1;
	optional string name = 2;
	optional int32 type = 3;
	optional int32 daguan = 4;
	optional RewardInfo cost = 5;
	repeated RewardInfo lootlist = 6;
	repeated EventQuestion question = 7;
	repeated Enemy enemy = 8;
	optional int32 call = 9;
}
message EventConfigList {
	repeated EventConfig data = 1;
}
message Event {
	optional int32 order = 1;
	optional int32 eventid = 2;
	optional string name = 3;
	optional int32 daguan = 4;
	optional int32 conditiontype = 5;
	optional int32 condition = 6;
	optional int32 targetid = 7;
	optional string targetdes = 8;
	optional int32 weight = 9;
        optional int32 level = 10;
        optional int32 count = 11;
	optional int32 eventcount = 12;
}
message AreaEvent {
	optional int32 id = 1;
	repeated Event event = 2;
	optional int32 weight = 3;
}
message AreaEventList {
	repeated AreaEvent data = 1;
}
message Loot {
	optional int32 order = 1;
	repeated RewardInfo item = 2;
}
message LootList {
	repeated Loot id = 1;
}
message RequestLevelStartCommand {
	optional int32 id = 1;
}
message RequestEventCommand {
        optional int32 userId = 1;
        optional int32 order = 2;
}
message ResponseEventCommand {
        optional Event event = 1;
}
message RequestLevelLootResultCommand {
}
message RequestEventResultCommand {
	optional int32 order = 1;
	optional string teamInfo = 2;
	optional string fightInfo = 3;
	optional int32 turn = 4;
	optional int32 finalid = 6;
	optional bool ret = 5;
}
message ResponseEventResultCommand {
	repeated RewardInfo reward = 1;
}
message ResponseLevelLootCommand {
	optional int32 unlockDaguan = 1;
	optional int32 leftCount = 2;
	optional int32 lootDaguan = 3;
	optional int32 lootTime = 4;
	optional int32 eventTime = 5;
	repeated Event event = 6;
}

message RequestEventBuyCommand {
}
////////// MailProto
message Mail {
	required int32 id = 1;
	required int64 userId = 2;
	required int64 fromUserId = 3;
	required string fromUserName = 4;
	required int32 type = 5;
	required string startDate = 6;
	required string endDate = 7;
	required string content = 8;
	required int32 relatedId = 10;
	repeated RewardInfo reward = 9;
	optional int32 icon = 11;
	optional int32 vip = 12;
	optional bool isRead = 13;
}

message MailList {
	required int32 type = 1;
	repeated Mail mail = 2;
}

message RequestGetUserMailListCommand {
	optional int32 type = 1; //0:system mail 1:friend
}

message ResponseGetUserMailListCommand {
	repeated MailList mailList = 1;
}

message RequestReadMailCommand {
	required int32 type = 1;
	repeated int32 id = 2;
}

message ResponseSendRewardCommand {
	repeated RewardInfo reward = 1;
}

message RequestDeleteMailCommand {
	required int32 type = 1;
	repeated int32 id = 2;	
}

message RequestAddFriendCommand {
	optional int64 userId = 1;
	optional string userName = 2;
}

message RequestReceiveFriendCommand {
	repeated int32 id = 1;
	required bool receive = 2;
}

message RequestDelFriendCommand {
	required int64 userId = 1;
}

message UserFriend {
	required int64 friendId = 1;
	required string friendName = 2;
	optional int32 vip = 3;
	optional int32 zhanli = 4;
	optional string lastLoginTime = 5;
	optional int32 countDown = 6;
	optional int32 icon = 7;
}

message RequestGetUserFriendListCommand {

}

message ResponseGetUserFriendListCommand {
	repeated UserFriend friend = 1;	
}

////////// UnionProto
message Union {
	required int32 id = 1;
	required string name = 2;
	required int32 icon = 3;
	required int32 level = 4;
	optional int32 zhanli = 5;
	optional int32 rank = 6;
	optional int32 point = 7;
	optional int32 count = 8;
	optional int32 maxCount = 9;
	repeated UserInfo members = 10;
	repeated UnionApply applies = 11;
	optional int32 attackId = 12;
	optional int64 attackEndTime = 13;
	optional int64 attackCloseTime = 14;
	optional int32 defendId = 15;
	optional int64 defendEndTime = 16;
	optional int64 defendCloseTime = 17;
	repeated UserInfo attacks = 18;
	repeated UserInfo defends = 19;
	optional bool isApply = 20;
	optional string killMonsterRecord = 21;
	optional string costRecord = 22;
	repeated UnionBossRecord unionBoss = 23;
	optional string bossRecord = 24;
	optional string bossEndTime = 25;
	optional string announce = 26;
}

message UnionApply {
	required int64 id = 1;
	required UserInfo user = 2;
	required int64 endTime = 3;
	optional int64 timestamp = 4;
}

message BossRoomRecord {
	required int32 groupId = 1;
	required int32 bossId = 2;
	required int64 createUserId = 3;
	repeated BossRecord bossRecord = 4;
	repeated UserInfo user = 5;
	optional int32 status = 6;//0或者空：准备状态  1：开始
	required string createTime = 7;
}

message BossGroupRecord {
	required int32 groupId = 1;
	repeated BossRecord bossRecord = 2;
}

message BossRecord {
	optional int32 bossId = 1;
	optional int32 count = 2;	
	optional int64 userId = 3;
	optional string endTime = 4;
}

message BossgroupList {
	repeated Bossgroup group = 1;
}

message Bossgroup {
	optional int32 id = 1;
	optional int32 zhanli = 2;
	optional int32 bosscount = 3;
	optional int32 count = 4;
	repeated Boss boss = 5;
	optional int32 time = 6;//持续时间
}

message Boss {
	optional int32 bossid = 1;
}

message BosslootGroupList {
	repeated BosslootGroup id = 1;
}

message BosslootGroup {
	optional int32 id = 1;
	repeated Bossloot order = 2;
}

message Bossloot {
	optional int32 weightall = 1;
	optional int32 itemid1 = 2;
	optional int32 itemcount1 = 3;
	optional int32 weight1 = 4;
	optional int32 itemid2 = 5;
	optional int32 itemcount2 = 6;
	optional int32 weight2 = 7;
	optional int32 itemid3 = 8;
	optional int32 itemcount3 = 9;
	optional int32 weight3 = 10;
	optional int32 order = 11;
}

message UserBattletower {
	optional int64 userId = 1;
	optional int32 toptower = 2;
	optional int32 currenttower = 3;
	optional int32 resettimes = 4;
	optional int32 lefttimes = 5;
	optional int32 random = 6;
}

message TowerReward {
	optional int32 id = 1;
	optional int32 floor = 2;
	optional int32 floora = 3;
	optional int32 floorb = 4;
	optional int32 rewardid = 5;
	optional int32 rewardcount = 6;
	optional int32 rewardid1 = 7;
	optional int32 rewardcount1 = 8;
	optional int32 rewardid2 = 9;
	optional int32 rewardcount2 = 10;
	optional int32 rewardid3 = 11;
	optional int32 rewardcount3 = 12;
}

message TowerRewardList {
	repeated TowerReward id = 1;
}

message RequestSubmitBattletowerCommand {
	required bool success = 1;
	optional int32 tower = 2;
	optional int32 enemyId = 3;
}

message RequestResetBattletowerCommand {
	optional int32 enemyId = 1;	
}

message RequestGetBattletowerCommand {
	optional UserBattletower ubt = 1;
}

message ResponseUserBattletowerCommand {
	optional UserBattletower ubt = 1;
}

message RequestBloodEnterCommand {

}

message RequestBloodXiazhuCommand {
	required int64 xiazhuUserId = 1;
}

message RequestInviteFightBossCommand {
	repeated int64 userId = 1;
	optional int32 groupId = 2;
	optional int32 bossId = 3;
	optional int64 createUserId = 4;
	optional string startDate = 5;
}

message RequestQuitFightBossCommand {
	required int64 userId = 1;
}

message ResponseBossRoomRecordCommand {
	required BossRoomRecord bossRoom = 1;
}

message RequestSubmitBossRoomScoreCommand {
	required int32 percent = 1;
}

message RequestStartBossRoomCommand {
	
}

message RequestCreateBossRoomCommand {
	required int32 groupId = 2;
	required int32 bossId = 3;
}

message RequestBossRoomInfoCommand {
	
}

message UnionBossList {
	repeated UnionBoss boss = 1;
}

message UnionBoss {
	optional int32 id = 1;
	optional int32 type = 2;
	optional int32 targetid = 3;
	optional int32 targetcount = 4;
	optional int32 lasttime = 5;
	optional int32 HP = 6;
	message Skill {
		optional int32 skilid = 1;
		optional int32 skilllevel = 2;
	}
	repeated Skill skill = 7;
	optional int32 refreshtime = 8;
	optional int32 count = 9;
	optional int32 handbook = 10;
}

message UnionBosslootList {
	repeated UnionBossloot boss = 1;
}

message UnionBossloot {
	optional int32 id = 1;
	repeated UnionBosslootItem item = 2;
}

message UnionBosslootItem {
	optional uint32 order = 11;
	optional int32 weightall = 1;
	optional int32 itemid1 = 2;
	optional int32 count1 = 3;
	optional int32 weight1 = 4;
	optional int32 itemid2 = 5;
	optional int32 count2 = 6;
	optional int32 weight2 = 7;
	optional int32 itemid3 = 8;
	optional int32 count3 = 9;
	optional int32 weight3 = 10;
}

message UnionBosswinList {
	repeated UnionBosswin boss = 1;
}

message UnionBosswin {
	optional int32 id = 1;
	repeated RankItem rank = 2;
}

message RankItem {
	optional int32 rank = 1;
	optional int32 rank1 = 2;
	optional string des = 9;
	repeated RewardInfo reward = 10;
}

message RequestCreateUnionCommand {//创建公会
	optional int32 icon = 1;
	required string name = 2;
}

message RequestApplyUnionCommand {//提交公会申请
	required int32 unionId = 1;
}

message RequestReplyUnionCommand {//回复公会申请
	required int64 id = 1;
	required bool receive = 2;
}

message RequestHandleUnionMemberCommand {//调整公会成员权限
	required int64 id = 1;
	required int32 job = 2;
}

message RequestSetUnionAnnounceCommand {//调整公会公告
        optional string announce = 1;
}

message RequestUpgradeUnionCommand {//升级公会
}

message RequestQuitUnionCommand {//退出公会
	optional int64 id = 1;
}

message RequestUnionInfoCommand {//公会
}

message RequestAttackUnionCommand {//进攻其他公会
	optional int32 unionId = 1;
	required int64 teamid = 2;
}

message RequestDefendUnionCommand {//防守其他公会
	required int64 teamid = 2;
}

message ResponseUnionInfoCommand {
	optional Union union = 1;
}

message RequestUnionListCommand {
}

message ResponseUnionListCommand {
	repeated Union union = 1;
}

message RequestSubmitBosskillCommand {
	required int32 groupId = 1;
	required int32 bossId = 2;
}

message RequestBosskillCommand {
	
}

message ResponseBosskillCommand {
	repeated BossGroupRecord record = 1;	
}

message ResponseUnionBossCommand {
	repeated UnionBossRecord unionBoss = 1;
}

message RequestUnionBossFightCommand {
	required int32 bossId = 1;
	required int32 hp = 2;
	optional int32 percent = 3;
}
////////// RewardTaskProto
message RewardTaskDailyList {
	repeated RewardTaskDaily id = 1;
}

message RewardTaskDaily {
	required uint32 id = 1;
	required uint32 itemid = 2;
	required uint32 count = 3;
}

enum REWARDTASK_TYPE{
	TYPE_1 = 1;
	TYPE_2 = 2;
	TYPE_3 = 3;//深渊
	TYPE_4 = 4;
}

message RewardTaskEnemy {
	required int32 enemyid = 1;
	required int32 weight = 2;
}

message RewardTask {
	required uint32 id = 1;
	required string name = 2;
	required uint32 type = 3;
	required uint32 renshu = 4;
	repeated RewardTaskEnemy enemy = 5;
	repeated CostItem cost = 6;
}

message RewardTaskList {
	repeated RewardTask id = 1;
}

message RoomInfo {
	optional uint32 index = 1;
	optional UserInfo user = 2;
}

message UserRewardTask {
	required uint32 id = 1;//悬赏令id
	optional uint32 enemyid = 2;
	optional uint32 status = 3;//0:没打死，1打死, 2可领奖
	optional uint32 type = 4;
	optional RoomInfo roomInfo = 5;
	enum REWARDTASK_STATUS {
		LIVE = 0;
		END = 1;
		CANREWARD = 2;
		FULL = 3;//房间人数已满
		HAS_IN = 4;//已经加入了
		LIMIT = 5;//悬赏任务已达上限
	};
	required uint32 index = 7;//boss的一个序列
}

message UserRewardTaskRoom {
	required uint64 createUserId = 1;
	//repeated UserInfo user = 2;
	required uint32 bossId = 3;
	optional uint32 status = 4;
	optional uint32 index = 5;
	repeated RoomInfo roomInfo = 6; 
	optional uint32 enemyId = 7;
}

message RequestCreateRewardTaskRoomCommand {
	required uint32 index = 1;
}

message RequestQuitRewardTaskRoomCommand {
	required uint32 index = 1;
	required uint64 userId = 2;
}

message RequestInviteToRewardTaskRoomCommand {
	optional uint32 id = 1;
	repeated uint64 userId = 2;
	optional uint64 createUserId = 3;
	optional uint32 index = 4;
}

message RequestSubmitRewardTaskScoreCommand {
	required uint32 index = 1;
	required bool ret = 2;
}

message ResponseUserRewardTaskCommand {
	repeated UserRewardTask userRewardTask = 1;
}

message ResponseUserRewardTaskRoomCommand {
	repeated UserRewardTaskRoom room = 1;
}

message RequestUserRewardTaskCommand {

}

message RequestRewardTaskRewardCommand {
	required uint32 index = 2;
}

message RequestUserRewardTaskRoomCommand {
	required uint32 index = 1;
}

message RequestGiveupRewardTaskCommand {
	required uint32 index = 1;
}
////////// TaskProto
message TaskList {
	repeated Task data = 1;
}

message TaskTargetList {
	repeated TaskTarget id = 1;
}

message TaskTarget {
	optional int32 targetid = 1;
	repeated TaskOrder order = 2;
	optional uint32 skip = 3;
}

message TaskOrder {
	optional int32 order = 1;
	optional int32 type = 2;
	optional string des = 3;
	optional int32 targetcount = 4;
	optional int32 rewardid1 = 5;
	optional int32 rewardcount1 = 6;
	optional int32 targetid = 7;
	optional int32 rewardid2 = 8;
	optional int32 rewardcount2 = 9;
	optional int32 targetcount1 = 10;
	optional int32 rewardid3 = 11;
	optional int32 rewardcount3 = 12;
	optional string name = 13;
	repeated RewardInfo reward = 14;
	optional uint32 skip = 15;
}

message Task3OrderList {
	repeated TaskOrder id = 1;
}
	
message Task2TargetHero {
	optional int32 heroid = 1;
	repeated TaskTarget target = 2;
}

message Task2TargetList {
	repeated Task2TargetHero id = 1;
}

message UserTask {
	optional int32 targetid = 1;
	optional int32 process = 2;
	optional int32 status = 3;
	repeated int32 heroid = 4;
}
message RequestUserTaskCommand {

}

message ResponseUserTaskCommand {
	repeated UserTask userTask1 = 1;
	repeated UserTask userTask2 = 2;
	repeated UserTask userTask3 = 3;
}

message RequestGetTaskRewardCommand {
	required int32 type = 1;//1：主线， 2：支线， 3：每日
	optional int32 order = 2;
	optional int32 heroid = 3;//支线任务的排序
}

message RaidReward {
	optional int32 lootid = 1;
	optional int32 lootcount = 2;
	optional int32 weight = 3;
}
message RaidOrder {
	optional int32 order = 1;
	optional int32 enemyid = 2;
	repeated RaidReward loot = 3;
}
message Raid {
	optional int32 id = 1;
	optional int32 costid = 2;
	optional int32 costcount = 3;
	optional string name = 4;
	repeated RaidOrder order = 5;
}
message RaidList {
        repeated Raid id = 1;
}
message RequestOpenRaidCommand {
	optional int32 id = 1;
}
message RequestStartRaidCommand {
	optional int32 id = 1;
        optional string teamInfo = 2;
        optional string fightInfo = 3;
        optional int32 turn = 4;
        optional bool ret = 5;
}
message ResponseRaidCommand {
	optional int32 id = 1;
}
////////// Request
message RequestCommand {
	required HeadInfo head = 1;
	optional RequestRegisterCommand registerCommand = 2;
	optional RequestLoginCommand loginCommand = 3;
	optional RequestEventResultCommand eventResultCommand = 4;
	optional RequestEventCommand eventCommand = 10; 
	optional RequestUpdateTeamCommand updateTeamCommand = 5;
	optional RequestLevelStartCommand levelStartCommand = 6;
	optional RequestLevelLootResultCommand levelLootResultCommand = 8;
	optional RequestHeroLevelUpCommand heroLevelUpCommand = 9;
	optional RequestHeroLevelUpToCommand heroLevelUpToCommand = 151;
	optional RequestLockHeroCommand lockHeroCommand = 131;
	optional RequestAddHeroEquipCommand addHeroEquipCommand = 11;
	optional RequestLotteryCommand lotteryCommand = 14;
	optional RequestGetLadderRankListCommand getLadderRankListCommand = 15;
	optional RequestGetUserLadderRankListCommand getUserLadderRankListCommand = 16;
	optional RequestAttackLadderModeCommand attackLadderModeCommand = 17;
	optional RequestGetUserMailListCommand getUserMailListCommand = 18;
	optional RequestReadMailCommand readMailCommand = 19;
	optional RequestDeleteMailCommand deleteMailCommand = 20;
	optional RequestAddFriendCommand addFriendCommand = 21;
	optional RequestReceiveFriendCommand receiveFriendCommand = 22;
	optional RequestAreaCommand areaCommand = 26;
	optional RequestRefreshAreaCommand refreshAreaCommand = 154;
	optional RequestUseAreaEquipCommand useAreaEquipCommand = 137;
	optional RequestAreaResourceCommand areaResourceCommand = 136;
	optional RequestUnlockAreaCommand unlockAreaCommand = 133;
	optional RequestAttackMonsterCommand attackMonsterCommand = 27;
	optional RequestAttackBossCommand attackBossCommand = 28;
	optional RequestAttackResourceCommand attackResourceCommand = 29;
	optional RequestAttackResourceMineCommand attackResourceMineCommand = 30;
	optional RequestAttackResourceMineInfoCommand attackResourceMineInfoCommand = 124;
	optional RequestCollectResourceMineCommand collectResourceMineCommand = 134;
	optional RequestQuitUnionCommand quitUnionCommand = 42;
	optional RequestUnionInfoCommand unionInfoCommand = 43;
	optional RequestUnionListCommand unionListCommand = 44;
	optional RequestCreateUnionCommand createUnionCommand = 31;
	optional RequestApplyUnionCommand applyUnionCommand = 32;
	optional RequestReplyUnionCommand replyUnionCommand = 33;
	optional RequestHandleUnionMemberCommand handleUnionCommand = 40;
	optional RequestUpgradeUnionCommand upgradeUnionCommand = 41;
	optional RequestAttackUnionCommand attackUnionCommand = 100;
	optional RequestDefendUnionCommand defendUnionCommand = 101;
	optional RequestSetUnionAnnounceCommand unionAnnounceCommand = 162;
	optional RequestDailyShopCommand dailyShopCommand = 102;
	optional RequestDailyShopPurchaseCommand dailyShopPurchaseCommand = 103;
	optional RequestDailyShopRefreshCommand dailyShopRefreshCommand = 104;
	optional RequestShopCommand shopCommand = 105;
	optional RequestShopPurchaseCommand shopPurchaseCommand = 106;
	optional RequestBlackShopCommand blackShopCommand = 107;
	optional RequestBlackShopPurchaseCommand blackShopPurchaseCommand = 108;
	optional RequestBlackShopRefreshCommand blackShopRefreshCommand = 109;
	optional RequestUnionShopCommand unionShopCommand = 110;
	optional RequestUnionShopPurchaseCommand unionShopPurchaseCommand = 111;
	optional RequestUnionShopRefreshCommand unionShopRefreshCommand = 112;
	optional RequestPVPShopCommand PVPShopCommand = 113;
	optional RequestPVPShopPurchaseCommand PVPShopPurchaseCommand = 114;
	optional RequestPVPShopRefreshCommand PVPShopRefreshCommand = 115;
	optional RequestRaidShopCommand raidShopCommand = 159;
        optional RequestRaidShopPurchaseCommand raidShopPurchaseCommand = 160;
        optional RequestRaidShopRefreshCommand raidShopRefreshCommand = 161;
	optional RequestExpeditionShopCommand expeditionShopCommand = 116;
	optional RequestExpeditionShopPurchaseCommand expeditionShopPurchaseCommand = 117;
	optional RequestExpeditionShopRefreshCommand expeditionShopRefreshCommand = 118;
	optional RequestLadderShopCommand ladderShopCommand = 119;
	optional RequestLadderShopPurchaseCommand ladderShopPurchaseCommand = 120;
	optional RequestLadderShopRefreshCommand ladderShopRefreshCommand = 121;
	optional RequestLibaoShopCommand libaoShopCommand = 142;
	optional RequestPurchaseCoinCommand purchaseCoinCommand = 122;
	optional RequestGetTeamCommand teamCommand = 123;
	optional RequestRefreshPVPMapCommand refreshPvpMapCommand = 140;
	optional RequestPVPMapListCommand pvpMapListCommand = 125;
	optional RequestUnlockPVPMapCommand unlockPvpMapCommand = 132;
	optional RequestAttackPVPMonsterCommand attackPVPMonsterCommand = 126;
	optional RequestPVPMineInfoCommand pvpMineInfoCommand = 128;
	optional RequestAttackPVPMineCommand attackPVPMineCommand = 129;
	optional RequestRefreshPVPMineCommand refreshPVPMineCommand = 130;
	optional RequestCdkeyCommand cdkeyCommand = 138;
	optional RequestCheatRechargeCommand cheatrechargeCommand = 139;
	optional RequestPurchaseVipLibaoCommand purchaseVipLibaoCommand = 141;
	optional RequestGetGrowJewelCommand getGrowJewelCommand = 149;
	optional RequestGetGrowExpCommand getGrowExpCommand = 150;
	optional RequestPurchaseLadderTimeCommand purchaseLadderTimeCommand = 152;
	optional RequestPurchaseContractCommand purchaseContractCommand = 153;
	optional RequestFightInfoCommand fightInfoCommand = 155;
	optional RequestGetFightInfoCommand getFightInfoCommand = 156;
	optional RequestOpenRaidCommand openRaidCommand = 157;
	optional RequestStartRaidCommand raidCommand = 158;
	//////////////////////////////////////////////////////
	optional RequestMessageBoardListCommand messageBoardListCommand = 36;
	optional RequestCreateMessageBoardCommand createMessageBoardCommand = 37;
	optional RequestReplyMessageCommand replyMessageCommand = 38;
	optional RequestUserTeamListCommand userTeamListCommand = 46;
	optional RequestGetLadderUserInfoCommand ladderUserInfoCommand = 47;
	optional RequestGetUserFriendListCommand userFriendListCommand = 48;
	optional RequestEquipComposeCommand equipComposeCommand = 50;
	optional RequestUsePropCommand usePropCommand = 51;
	optional RequestFenjieEquipCommand fenjieEquipCommand = 52;
	optional RequestSignCommand signCommand = 53;
	optional RequestHelpAttackPVPMineCommand helpAttackPVPMineCommand = 55;
	optional RequestFenjieHeroCommand fenjieHeroCommand = 56;
	optional RequestResetHeroSkillCommand resetHeroSkillCommand = 57;
	optional RequestSendMailCommand sendMailCommand = 58;
	optional RequestBrotherMineInfoCommand brotherMineInfoCommand = 59;
	optional RequestEnterMohuaMapCommand enterMohuaMapCommand = 60;
	optional RequestStartMohuaMapCommand startMohuaMapCommand = 61;
	optional RequestUseMohuaCardCommand useMohuaCardCommand = 62;
	optional RequestMohuaStageRewardCommand mohuaStageRewardCommand = 63;
	optional RequestMohuaHpRewardCommand mohuaHpRewardCommand = 64;
	optional RequestMohuaSubmitStageCommand mohuaSubmitStageCommand = 65;
	optional RequestEndMohuaMapCommand endMohuaMapCommand = 66;
	optional RequestSaleEquipCommand saleEquipCommand = 67;
	optional RequestDelFriendCommand delFriendCommand = 68;
	optional RequestSubmitZhanliCommand submitZhanliCommand = 69;
	optional RequestAchieveRewardCommand achieveRewardCommand = 70;
	optional RequestAchieveListCommand achieveListCommand = 71;
	optional RequestRichangRewardCommand richangRewardCommand = 73;
	optional RequestRichangListCommand richangListCommand = 74;
	optional RequestKaifu2ActivityCommand kaifu2ActivityCommand = 75;
	optional RequestKaifuRewardCommand kaifuRewardCommand = 77;
	optional RequestKaifuListCommand kaifuListCommand = 78;
	optional RequestUserPokedeCommand userPokedeCommand = 80;
	optional RequestRankCommand rankCommand = 81;
	optional RequestBuyHeroPackageCommand buyHeroPackageCommand = 82;
	optional RequestSubmitComposeSkillCommand submitComposeSkillCommand = 83;
	optional RequestSubmitIconCommand submitIconCommand = 85;
	optional RequestReadyAttackLadderCommand readyAttackLadderCommand = 86;
	optional RequestBindAccountCommand bindAccountCommand = 87;
	optional RequestQueryRechargeCommand queryRechargeCommand = 88;
	optional RequestShouchongRewardCommand shouchongRewardCommand = 89;
	optional RequestHeartBeatCommand heartBeatCommand = 90;
	optional RequestGreenhandCommand greenhandCommand = 91;
	optional RequestLogCommand logCommand = 92;
	optional RequestFeedFoodCommand feedFoodCommand = 93;
	optional RequestClearHeroCommand clearHeroCommand = 94;
	optional RequestChoseClearInfoCommand choseClearInfoCommand = 95;
	optional RequestSubmitBosskillCommand submitBosskillCommand = 96;
	optional RequestBosskillCommand bosskillCommand = 97;
	optional RequestUnionBossFightCommand unionBossFightCommand = 98;
	optional RequestHeroStrengthenCommand heroStrengthenCommand = 99;
	optional RequestSevenLoginSignCommand sevenLoginSignCommand = 200;
	optional RequestIsAreaOwnerCommand isAreaOwnerCommand = 201;
	optional RequestOpenFetterCommand openFetterCommand = 202;
	optional RequestUserTaskCommand userTaskCommand = 203;
	optional RequestGetTaskRewardCommand getTaskRewardCommand = 204;
	optional RequestSubmitBattletowerCommand submitBattletowerCommand = 205;
	optional RequestResetBattletowerCommand resetBattletowerCommand = 206;
	optional RequestGetBattletowerCommand getBattletowerCommand = 207;
	optional RequestBattletowerShopCommand battletowerShopCommand = 208;
	optional RequestBattletowerShopPurchaseCommand battletowerShopPurchaseCommand = 209;
	optional RequestBattletowerShopRefreshCommand battletowerShopRefreshCommand = 210;
	optional RequestBloodEnterCommand bloodEnterCommand = 211;
	optional RequestBloodXiazhuCommand bloodXiazhuCommand = 212;
	optional RequestQueryNoticeBoardCommand queryNoticeBoardCommand = 213;
	optional RequestHelpLevelCommand helpLevelCommand = 214;
	optional RequestInviteFightBossCommand inviteFightBossCommand = 215;
	optional RequestQuitFightBossCommand quitFightBossCommand = 216;
	optional RequestSubmitBossRoomScoreCommand submitBossScoreCommand = 217;
	optional RequestUserInfoCommand userInfoCommand = 218;
	optional RequestRechargeCommand rechargeCommand = 219;
	optional RequestTalentupgradeCommand talentupgradeCommand = 220;
	optional RequestTalentChangeUseCommand talentChangeUseCommand = 223;
	optional RequestTalentChangeSkillCommand talentChangeSkillCommand = 224;
	optional RequestStartBossRoomCommand startBossRoomCommand = 225;
	optional RequestCreateBossRoomCommand createBossRoomCommand = 226;
	optional RequestBossRoomInfoCommand bossRoomInfoCommand = 227;
	optional RequestEquipStrenthenCommand equipStrenthenCommand = 228;
	optional RequestEquipPokedeCommand equipPokedeCommand = 229;
	optional RequestTalentChangeEquipCommand talentChangeEquipCommand = 230;
	optional RequestZanHeroMessageBoardCommand zanHeroMessageBoardCommand = 231;
	optional RequestCreateRewardTaskRoomCommand createRewardTaskRoomCommand = 232;
	optional RequestQuitRewardTaskRoomCommand quitRewardTaskRoomCommand = 233;
	optional RequestInviteToRewardTaskRoomCommand inviteToRewardTaskRoomCommand = 234;
	optional RequestSubmitRewardTaskScoreCommand submitRewardTaskScoreCommand = 235;
	optional RequestUserRewardTaskCommand userRewardTaskCommand = 236;
	optional RequestRewardTaskRewardCommand rewardTaskRewardCommand = 237;
	optional RequestUserRewardTaskRoomCommand userRewardTaskRoomCommand = 238;
	optional RequestSynthetiseComposeCommand synthetiseComposeCommand = 239;
	optional RequestGiveupRewardTaskCommand giveupRewardTaskCommand = 240;
	optional RequestExtraRewardCommand extraRewardCommand = 241;
	optional RequestEventBuyCommand eventBuyCommand = 242;
	optional RequestLadderInfoCommand ladderInfoCommand = 243;
	optional RequestRefreshLadderEnemyCommand refreshLadderEnemyCommand = 244;
	optional RequestSubmitLadderResultCommand submitLadderResultCommand = 245;
	optional RequestLadderTaskRewardCommand ladderTaskRewardCommand = 246;
	optional RequestLadderSeasonRewardCommand ladderSeasonRewardCommand = 247;
	optional RequestLadderEnemyCommand ladderEnemyCommand = 248;
}
////////// Commands
message ErrorCommand {
        required string code = 1;
        required string message = 2;
}

message ResponseMessageCommand {
	required int32 code = 1;
	required string msg = 2;
}
message ResponseCommand {
	required HeadInfo head = 1;
	optional ErrorCommand errorCommand = 2;
	optional RewardCommand rewardCommand = 101;
	optional ResponseDailyShopCommand dailyShopCommand = 102;
	optional ResponseShopCommand shopCommand = 103;
	optional ResponseBlackShopCommand blackShopCommand = 104;
	optional ResponseUnionShopCommand unionShopCommand = 105;
	optional ResponsePVPShopCommand PVPShopCommand = 106;
	optional ResponseRaidShopCommand raidShopCommand = 160;
	optional ResponseExpeditionShopCommand expeditionShopCommand = 107;
	optional ResponseLadderShopCommand ladderShopCommand = 108;
	optional ResponseLibaoShopCommand libaoShopCommand = 142;
	optional ResponseFirstRechargeStatusCommand firstRechargeStatusCommand = 143;
	optional ResponsePurchaseCoinCommand purchaseCoinCommand = 122;
	optional ResponseGetTeamCommand teamCommand = 123;
	optional ResponsePVPMapListCommand pvpMapListCommand = 125;
	optional ResponseAreaEquipCommand areaEquipCommand = 137;
	optional ResponsePVPMineInfoCommand pvpMineInfoCommand = 138;
	optional ResponseFightInfoCommand fightInfoCommand = 155;
	optional ResponseRaidCommand raidCommand = 158;
	optional ResponseEventCommand eventCommand = 159;        
	////////////////////////////////////////////////////////
	optional ResponseNeedRegisterCommand needRegisterCommand = 3;
	optional ResponseUserInfoCommand userInfoCommand = 4;
	optional ResponseEventResultCommand eventResultCommand = 166;
	optional ResponseLevelLootCommand levelLootCommand = 167;
	optional ResponseHeroResultCommand heroResultCommand = 8;
	optional ResponseGetUserHeroCommand getUserHeroCommand = 14;
	optional ResponseGetLadderRankListCommand getLadderRankListCommand = 15;
	optional ResponseGetUserLadderRankListCommand getUserLadderRankListCommand = 16;
	optional ResponseAttackLadderModeCommand attackLadderModeCommand = 17;
	optional ResponseGetUserMailListCommand getUserMailListCommand = 18;
	optional ResponseSendRewardCommand sendRewardCommand = 19;
	optional ResponseMessageCommand messageCommand = 20;
	optional ResponseGetUserFriendListCommand getUserFriendListCommand = 21;
	optional ResponseGetUserEquipCommand userEquipCommand = 23;
	optional ResponseAreaCommand areaCommand = 24;
	optional ResponseAreaResourceCommand areaResourceCommand = 136;
	optional ResponseAttackResourceMineInfoCommand resourceMineInfoCommand = 124;
	optional ResponseUnionInfoCommand unionInfoCommand = 27;
	optional ResponseUnionListCommand unionListCommand = 28;
	optional ResponseMessageBoardListCommand messageBoardListCommand = 29;
	optional ResponseMessageBoardCommand messageBoardCommand = 30;
	optional ResponseUserTeamListCommand userTeamListCommand = 31;
	optional ResponseGetLadderUserInfoCommand ladderUserInfoCommand = 32;
	optional ResponseEquipComposeCommand equipComposeCommand = 33;
	optional ResponseUserPropCommand userPropCommand = 34;
	optional ResponseUsePropCommand usePropCommand = 35;
	optional ResponseSignCommand signCommand = 37;
	optional ResponseMohuaUserDataCommand mohuaUserDataCommand = 38;
	optional ResponseAchieveListCommand achieveListCommand = 40;
	optional ResponseRichangListCommand richangListCommand = 42;
	optional ResponseKaifu2ActivityCommand kaifu2ActivityCommand = 43;
	optional ResponseKaifuRewardCommand kaifuRewardCommand = 45;
	optional ResponseKaifuListCommand kaifuListCommand = 46;
	optional ResponseUserPokedeCommand userPokedeCommand = 47;
	optional ResponseRankCommand rankCommand = 48;
	optional ResponseEquipResultCommand equipResultCommand = 49;
	optional ResponseDeleteHeroCommand deleteHeroCommand = 50;
	optional ResponseUserHeadCommand userHeadCommand = 51;
	optional ResponseNoticeCommand noticeCommand = 53;
	optional ResponseUserFoodCommand userFoodCommand = 54;
	optional ResponseClearInfoCommand clearInfoCommand = 55;
	optional ResponseBosskillCommand bosskillCommand = 56;
	optional ResponseUnionBossCommand unionBossCommand = 57;
	optional ResponseIsAreaOwnerCommand isAreaOwnerCommand = 58;
	optional ResponseUserTaskCommand userTaskCommand = 59;
	optional ResponseUserBattletowerCommand userBattletowerCommand = 60;
	optional ResponseBattletowerShopCommand battletowerShopCommand = 61;
	optional ResponseBossRoomRecordCommand bossRoomRecordCommand = 62;
	optional ResponseUserTalentCommand userTalentCommand = 63;
	optional ResponseEquipPokedeCommand equipPokedeCommand = 64;
	optional ResponseUserRewardTaskCommand userRewardTaskCommand = 65;
	optional ResponseUserRewardTaskRoomCommand userRewardTaskRoomCommand = 66;
	optional ResponseOtherUserInfoCommand otherUserInfoCommand = 67;
	optional ResponseEnemyLadderCommand enemyLadderCommand = 68;
	optional ResponseUserLadderCommand userLadderCommand = 69;
}

////////// End
