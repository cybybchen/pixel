package com.trans.pixel.protoc;

message UserInfo {
	required int64 id = 1;
	optional string account = 2;
	required int32 icon = 13;
	required string name = 3;
	optional int32 serverId = 4;
	optional int32 unionId = 14;
	optional int32 unionJob = 15;
	optional int32 vip = 19;
	optional int32 jewel = 5;
	optional int64 coin = 6;
	optional int64 exp = 7;
	optional int32 pointPVP = 8; //挂机PVP积分
	optional int32 pointLadder = 9; //天梯积分
	optional int32 pointExpedition = 10; //远征积分
	optional int32 pointUnion = 11; //工会积分
	optional int64 areaEnergyTime = 16;//疲劳回满时间
	optional int32 freeLotteryCoinTime = 17; //免费金币抽取倒计时
	optional int32 freeLotteryJewelTime = 18; //免费钻石抽取倒计时
	optional int32 ladderModeLeftTimes = 12;//每日天梯挑战剩余次数
	optional int32 PVPMineLeftTime = 20;//pvp矿点对手免费刷新次数
	optional int32 signDays = 21;//累积签到天数
	optional int32 loginDays = 22;//累积登录天数
	optional bool hasSign = 23;//当天有没有签到
}

message ServerData {
	optional int64 AreaBossRefreshTime = 1;
}

message Commodity {
	required int32 itemid = 1;
	required string name = 2;
	required int32 count = 3;
	required int32 currency = 4;
	required int32 cost = 5;
	optional int32 will = 6;
	optional bool isOut = 7;
	optional int32 id = 8;
	optional int32 sortid = 9;
}
message CommodityList {
	repeated Commodity item = 1;
}
message ShopList {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshTime = 3;//刷新
}
message Will {
	required int32 will = 1;
	required int32 weight = 2;
}
message ShopWill {
	required int32 id = 1;
	repeated Will loot = 2;
}
message ShopWillList {
	repeated ShopWill shop = 1;
}

message RewardInfo {
	required int32 itemid = 1;
	optional string itemname = 2;
	required int32 count = 3;
}

message MultiReward {
	optional int32 id = 1;
	optional string name = 2;
	repeated RewardInfo loot = 3;
}

message MultiRewardList {
	repeated MultiReward region = 2;
}

message HeadInfo 
{
	required int32 version = 1;		//  0: version1.1.1 1: version1.2.0 2013-3-28
	required int64 datetime = 2;
	required int32 gameVersion = 3;
	required int32 serverId = 4;
	required string account = 5;
	optional int64 userId = 6;
}

message HeroInfo {
	optional int32 infoId = 1;
	optional int32 level = 2;
	optional int32 rare = 3;
	optional string equipInfo = 4;
	repeated SkillInfo skill = 5;
	optional int32 value = 6;
	optional int32 star = 7;
	optional int32 heroId = 8;
	optional int32 position = 9;
	optional bool isLock = 10;
}

message PurchaseCoinReward {
	optional int32 daguan = 1;
	optional int32 rewardid1 = 2;
	optional int32 count11 = 3;
	optional int32 count12 = 4;
	optional int32 rewardid2 = 5;
	optional int32 count21 = 6;
	optional int32 count22 = 7;
}

message PurchaseCoinRewardList {
	repeated PurchaseCoinReward gold = 1;
}

message PurchaseCoinCost {
	optional int32 count = 1;
	optional int32 currency = 2;
	optional int32 cost = 3;
}

message PurchaseCoinCostList {
	repeated PurchaseCoinCost gold = 1;
}

message UserTeam {
	required int64 id = 1;
	required string teaminfo = 2;
}

message UserHero {
	required int64 userId = 1;
	required int32 heroId = 2;
	repeated HeroInfo heroInfo = 3;
}

message UserEquip {
	required int32 equipId = 1;
	required int32 equipCount = 2;
}

message UserProp {
	required int32 propId = 1;
	required int32 propCount = 2;
}

message SkillInfo {
	required int32 skillId = 1;
	required int32 skillLevel = 2;
}

message UserMine {
	required int32 mapId = 1;
	required int32 mineId = 2;
	optional int64 relatedUserId = 3;
	optional int64 preventTime = 4;
	optional int32 level = 5;
}

message UserLevel {
	required int32 prepareTime = 1; //准备时间
	required int32 putongLevel = 2;
	required string kunnanLevel = 3;
	required string diyuLevel = 4;
}

message UserLootLevel {
	required int32 packageCount = 1; //背包大小
	required int32 lootLevel = 2;    //当前挂机的关卡
	required int32 levelLootStartTime = 3; //挂机开始时间
	required string lootTime = 4;    //挂机时间记录
}

message Union {
	required int32 id = 1;
	required string name = 2;
	required int32 icon = 3;
	required int32 level = 4;
	optional int32 rank = 5;
	optional int32 point = 6;
	repeated UserInfo members = 7;
	repeated UnionApply applies = 8;
	optional int32 attackId = 9;
	optional int32 defendId = 10;
	repeated UserInfo attacks = 11;
	repeated UserInfo defends = 12;
	optional bool isApply = 13;
}

message UnionApply {
	required int64 id = 1;
	required UserInfo user = 2;
	required int64 endTime = 3;
}

message AreaResourceMine {//区域资源开采点
	required int32 id = 1;//开采点ID
	optional int32 resourceId = 2;//资源点ID
	required int32 time = 3;//开采时间
	required int32 yield = 4;//开采产量
	///////////////////////////////////
	optional UserInfo user = 5;//开采玩家
	optional int64 endTime = 6;//开采结束时间
}

message AreaResource {//区域资源点
	required int32 id = 1;//资源点ID
	required string name = 2;
	optional int32 belongto = 3;//区域ID
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	required int32 yield = 6;//开采产量
	required int32 count = 7;//开采点数量
	required int32 bossid = 8;//资源点BOSS
	repeated AreaResourceMine mines = 9;//开采点
	///////////////////////////////////
	optional int32 state = 10;//争夺状态:0正常，1准备战斗
	optional int64 endtime = 11;//该阶段结束时间
	optional UserInfo owner = 12;//占领玩家
	optional int32 attackerId = 13;//进攻工会
	optional int32 warDefended = 14;//抵挡波数
	repeated UserInfo attacks = 15;//进攻方
	repeated UserInfo defenses = 16;//防守方
}

message AreaResourceList {
	repeated AreaResource region = 1;
}

message AreaBoss {//区域世界BOSS
	required int32 id = 1;
	required string name = 2;
	optional int32 belongto = 3;//区域ID
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	optional int32 group = 6;
	optional int32 hpMax = 8;//最大血量
	optional int32 turn = 9;//回合限制
	///////////////////////////////////
	optional int32 hp = 10;//当前血量
	optional UserInfo owner = 11;//击杀者
	repeated Rank ranks = 12;//伤害排行
}

message AreaBossList {
	repeated AreaBoss region = 1;
}

message AreaWeight {
	required int32 enemyid = 1;
	required int32 weight = 2;
}

message AreaTime {
	required int32 time = 1;
	required int32 group = 2;
	required int32 count = 3;
	required int32 condition = 4;
	repeated AreaWeight enemy = 5;
}

message AreaTimeList {
	required int32 id = 1;
	repeated AreaTime time = 2;
}

message AreaFieldTimeList {
	repeated AreaTimeList region = 1;
}

message AreaMonster {//区域怪物
	required int32 id = 1;
	required string name = 2;
	optional int32 belongto = 3;//区域ID
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	optional int32 group = 6;
	optional bool killed = 7;//已击杀
}

message AreaMonsterList {
	repeated AreaMonster region = 1;
}

message Position {
	optional int32 position = 1;
	optional int32 x = 2;
	optional int32 y = 3;
}

message AreaPosition {
	required int32 id = 1;
	repeated Position position = 2;
}

message AreaPositionList {
	repeated AreaPosition region = 1;
}

message PVPMonsterReward {//pvp怪物奖励
	required int32 id = 1;
	optional string name = 2;
	optional int32 a = 3;//奖励魔金a+b*level
	optional int32 b = 4;
	optional int32 itemcount = 5;
	optional int32 weightall = 6;
	optional int32 itemid1 = 7;
	optional int32 count1 = 8;
	optional int32 weight1 = 9;
	optional int32 itemid2 = 10;
	optional int32 count2 = 11;
	optional int32 weight2 = 12;
}
message PVPMonsterRewardList {
	repeated PVPMonsterReward enemy = 1;
}

message PVPMonster {//pvp怪物Config
	required int32 id = 1;
	optional string name = 2;
	optional int32 boss = 3;//站立
	optional int32 fieldid = 4;//区域ID
	optional int32 count = 5;
	optional int32 a = 6;
	optional int32 b = 7;
	optional int32 x = 8;//坐标x
	optional int32 y = 9;//坐标y
	optional int32 positionid = 10;
	optional int32 level = 11;
}

message PVPMonsterList {
	repeated PVPMonster enemy = 1;
}

message PVPPosition {//pvp位置
	required int32 id = 1;
	optional int32 x = 2;//坐标x
	optional int32 y = 3;//坐标y
}

message PVPPositionList{
	optional int32 fieldid = 1;
	optional int32 name = 2;
	repeated PVPPosition xiaoguai = 3;
}

message PVPPositionLists{
	repeated PVPPositionList field = 1;
}

message PVPBoss {//pvpBoss
	required int32 id = 1;
	optional string name = 2;
	optional int32 fieldid = 3;//区域ID
	optional int32 x = 4;//坐标x
	optional int32 y = 5;//坐标y
	optional MultiReward reward = 6;//击败奖励
}

message PVPMine{//pvp矿点
	required int32 id = 1;
	optional int32 x = 2;
	optional int32 y = 3;
	optional int32 type = 4;
	optional int32 yield = 5;
	optional int32 enemyid = 6;
	optional UserInfo owner = 8;//占领者
	optional int64 endTime = 9;
	optional int32 level = 10;//每一级提升防守方战斗力5%
}

message PVPMap{
	optional int32 fieldid = 1;
	optional string name = 2;
	optional int32 bufflimit = 6;
	optional int32 yield = 7;
	optional int32 buff = 8;
	repeated PVPMine kuangdian = 3;
	repeated PVPMonster monster = 4;
	repeated PVPBoss boss = 5;
}

message PVPMapList{
	repeated PVPMap field = 1;
}

message Qiandao {
	repeated Sign order = 1;
	required int32 id = 2;
	required string activity = 3;
}

message SignList {
	repeated Qiandao qiandao = 1;
}

message Sign {
	required int32 order = 1;
	required string description = 2;
	required int32 targetid = 3;
	required int32 targetcount = 4;
	required int32 rewardid = 5;
	required string rewardname = 6;
	required int32 rewardcount = 7;
}

message WeightReward {
	optional int32 itemcount = 1;
	optional int32 weightall = 2;
	optional int32 itemid1 = 3;
	optional int32 count1 = 4;
	optional int32 weight1 = 5;
	optional int32 itemid2 = 6;
	optional int32 count2 = 7;
	optional int32 weight2 = 8;
	optional int32 itemid3 = 9;
	optional int32 count3 = 10;
	optional int32 weight3 = 11;
}

message AreaMonsterReward {
	required int32 id = 1;
	repeated WeightReward loot = 2;
}

message AreaMonsterRewardList {
	repeated AreaMonsterReward region = 1;
}

message AreaRankReward {
	required int32 ranking = 1;
	optional int32 itemid1 = 2;
	optional int32 count1 = 3;
	optional int32 itemid2 = 4;
	optional int32 count2 = 5;
	optional int32 itemid3 = 6;
	optional int32 count3 = 7;
	repeated RewardInfo reward = 8;
}

message AreaBossReward {
	required int32 id = 1;
	optional string name = 2;
	repeated AreaRankReward ranking = 3;
}

message AreaBossRewardList {
	repeated AreaBossReward boss = 1;
}

message VipInfo {
	required int32 vip = 1;
	required int32 rmb = 2;
	optional string effect = 3;
	optional int32 dianjin = 4;
	optional int32 tianti = 5;
	optional int32 pvp = 6;
	optional int32 quyu = 7;
	optional int32 mohua = 8;
	optional int32 baoxiang = 9;
	optional int32 zhibao = 10;
}

message VipList {
	repeated VipInfo vip = 1;
}

message AreaInfo {//可争夺区域
	required int32 id = 1;//区域ID
	required string name = 2;//开放所需战力
	required int32 zhanli = 3;//开放所需战力
	repeated AreaResource resources = 4;//区域资源点
	repeated AreaBoss bosses = 5;//区域BOSS
	repeated AreaMonster monsters = 6;//区域怪物
}

message AreaMode {//区域争夺
	repeated AreaInfo region = 1;//区域
}

message Rank {
	required UserInfo user = 1;
	required int32 score = 2;
	optional int32 rank = 3;
}

message UserRank {
	optional int64 userId = 1;
	optional string userName = 2;
	optional int64 rank = 3;
	repeated HeroInfo heroInfo = 4;
}

message UserFriend {
	required int64 friendId = 1;
	required string friendName = 2;
	required string teamRecord = 3;
}

message Mail {
	required int32 id = 1;
	required int64 userId = 2;
	required int64 fromUserId = 3;
	required string fromUserName = 4;
	required int32 type = 5;
	required string startDate = 6;
	required string endDate = 7;
	required string content = 8;
	required int32 relatedId = 10;
	repeated RewardInfo reward = 9;
}

message MailList {
	required int32 type = 1;
	repeated Mail mail = 2;
}

message MessageBoard {
	required int64 timestamp = 1;
	required int64 userId = 2;
	required string userName = 3;
	required string content = 4;
	repeated Msg msg = 5;
}

message Msg {
	required int32 id = 1;
	required string content = 2;
}

message MohuaCard {
	required int32 cardId = 1;
	required int32 cardCount = 2;
}

message MohuaUserData { //魔化之地模式的用户存档
	required int32 mapid = 1; //地图ID
	required int32 crystal = 2; //用户的水晶数
	required int32 stage = 3;//当前阶段
	repeated MohuaCard card = 4;//用户的卡片存储
	required int32 rewardStage = 5;//奖励领取的阶段
	required int32 consumehp = 6;//BOSS血量百分比
	required int32 rewardHp = 7;//血量领取的阶段	
}

message MohuaMapStage { //魔化之地的每一阶段信息
	required int32 stage = 1;//阶段数
	required int32 turn = 2;//回合数
	required int32 crystal = 3;//进入当前回合领取的水晶数
	required int32 randomcard = 4;//该回合可以随机的卡片数量
}

message MohuaMapStageList { //魔化之地地图信息
	required int32 mapid = 1;//地图ID
	required string mapname = 2;//地图名字
	required int32 maxcrystal = 3;//用户可以达到的最大水晶数
	repeated MohuaMapStage stage = 4;//魔化之地所有的阶段信息
}

message MohuaMap {//魔化之地
	repeated MohuaMapStageList mohua = 1;
}

message MohuaCardRoot {
	repeated MohuaCardMap mohua = 1;
}

message MohuaCardMap {
	required int32 mapid = 1;
	required string mapname = 2;
	repeated MohuaCardSkill skill = 3;
	repeated MohuaCardStage stage = 4;
}

message MohuaCardSkill {
	required int32 card = 1;
	required int32 weight = 2;
}

message MohuaCardStage {
	required int32 stage = 1;
	required int32 specialcard = 2;
}

message ErrorCommand{
        required string code = 1;
        required string message = 2;
}

message RewardCommand {
	optional int32 id = 1;//用于区分获得来源
	optional string title = 2;//弹窗标题
	repeated RewardInfo loot = 3;//奖励列表
}

message ResponseNeedRegisterCommand {

}

message RequestRegisterCommand {
	required string userName = 1;
}

message RequestLoginCommand {

}

message ResponseUserInfoCommand {
	required UserInfo user = 1;
}

message ResponsePopupCommand {
	required int32 popScreen = 1;//1. main menu; 2. career world map;
	optional string flowID = 2;
	required string text = 3;
	optional string heading = 4;
	optional string yesButtonID = 5;
	optional string noButtonID = 6;
}

message RequestLevelStartCommand {
	required int32 levelId = 1;
}

message RequestLevelPrepareCommand {
	required int32 levelId = 1;
}

message RequestLevelPauseCommand {
	
}

message RequestLevelResultCommand {
	required int32 levelId = 1;
	required string teamInfo = 2;
	required string fightInfo = 3;
}

message ResponseLevelResultCommand {
	repeated RewardInfo reward = 1;
}

message RequestLevelLootStartCommand {
	required int32 levelId = 1;
}

message RequestLevelLootResultCommand {

}

message ResponseLevelLootResultCommand {
	repeated RewardInfo reward = 1;
}

message RequestUpdateTeamCommand {
	required int32 id = 1;
	required string teamInfo = 2;
}

message RequestAddTeamCommand {
	required string teamInfo = 1;
}

message RequestUserTeamListCommand {

}

message ResponseUserTeamListCommand {
	repeated UserTeam userTeam = 1;
}

message RequestLockHeroCommand {
	required int32 heroId = 2;
	required int32 infoId = 3;
	optional bool isLock = 4;
}

message RequestHeroLevelUpCommand {
	required int32 levelUpType = 1; //1:level 2:star 3:rare 4:skill
	required int32 heroId = 2;
	required int32 infoId = 3;
	optional int32 skillId = 4;
	repeated int32 costInfoId = 5;
}

message ResponseHeroResultCommand {
	required int32 heroId = 1;
	required HeroInfo heroInfo = 2;
}

message RequestResetHeroSkillCommand {
	required int32 heroId = 1;
	required int32 infoId = 2;
}

message RequestLootResultCommand {

}

message ResponseLootResultCommand {
	optional int64 gold = 1;
	optional int64 exp = 2;
	optional int32 lastLootTime = 3;
}

message RequestAddHeroEquipCommand {
	required int32 heroId = 1;
	required int32 infoId = 2;
	optional int32 armId = 3;
}

message RequestEquipLevelUpCommand {
        required int32 heroId = 1;
        required int32 infoId = 2;
        required int32 armId = 3;
	required int32 levelUpId = 4;
}

message RequestEquipComposeCommand {
	required int32 levelUpId = 1;
}

message ResponseEquipComposeCommand {
	required int32 equipId = 1;
}

message RequestGetTeamCommand {
	required int64 userId = 1;
}

message ResponseGetTeamCommand {
	repeated HeroInfo heroInfo = 1;
	optional UserInfo user = 2;
}

message RequestLotteryCommand {
	required int32 type = 1; //1001:jinbi 1002:zuanshi
	optional int32 count = 2; //默认是10
}

message ResponseLotteryCommand {
	optional int64 coin = 1;
	optional int32 jewel = 2;
	repeated RewardInfo rewardList = 3;
}

message ResponseGetUserHeroCommand {
	repeated UserHero userHero = 1;
}

message ResponseGetUserEquipCommand {
        repeated UserEquip userEquip = 1;
}

message RequestGetLadderRankListCommand {

}

message RequestGetUserLadderRankListCommand {

}

message ResponseGetLadderRankListCommand {
	repeated UserRank userRank = 1;
}

message ResponseGetUserLadderRankListCommand {
	repeated UserRank userRank = 1;
}

message RequestAttackLadderModeCommand {
	required int64 rank = 1;
	required bool ret = 2;
	required int32 teamId = 3;
}

message ResponseAttackLadderModeCommand {
	required bool ret = 1;
	required string msg = 2;
}

message RequestGetLadderUserInfoCommand {
	required uint64 rank = 1;
}

message ResponseGetLadderUserInfoCommand {
	required UserRank userRank = 1;
}

message RequestGetUserMailListCommand {
}

message ResponseGetUserMailListCommand {
	repeated MailList mailList = 1;
}

message RequestReadMailCommand {
	required int32 type = 1;
	repeated int32 id = 2;
}

message ResponseMessageCommand {
	required int32 code = 1;
	required string msg = 2;
}

message ResponseSendRewardCommand {
	repeated RewardInfo reward = 1;
}

message RequestDeleteMailCommand {
	required int32 type = 1;
	repeated int32 id = 2;	
}

message RequestAddFriendCommand {
	required int64 userId = 1;
}

message RequestReceiveFriendCommand {
	repeated int32 id = 1;
	required bool receive = 2;
}

message RequestGetUserFriendListCommand {

}

message ResponseGetUserFriendListCommand {
	repeated UserFriend friend = 1;	
}

message RequestAreaCommand {//区域争夺
}

message ResponseAreaCommand {
	repeated AreaInfo areas = 1;
}

message RequestAttackMonsterCommand {//区域争夺打死怪物
	required int32 id = 1;
}

message RequestAttackBossCommand {//区域争夺攻击世界BOSS
	required int32 id = 1;
	required int32 score = 2;
}

message RequestAttackResourceCommand {//区域争夺刺杀领主/争夺领主
	required int32 id = 1;
}

message RequestAttackResourceMineCommand {//区域争夺占领矿区
	required int32 id = 1;
	required int32 teamid = 2;
	required bool ret = 3;
}

message RequestAttackResourceMineInfoCommand {//区域争夺矿区队伍信息
	required int32 id = 1;
}

message ResponseAttackResourceMineInfoCommand {
	repeated HeroInfo heroInfo = 1;
}

message ResponseUserLevelCommand {
	required UserLevel userLevel = 1;
}

message ResponseUserLootLevelCommand {
	required UserLootLevel userLootLevel = 1;
}

message RequestCreateUnionCommand {//创建工会
	optional int32 icon = 1;
	required string name = 2;
}

message RequestDeleteUnionCommand {
}

message RequestApplyUnionCommand {//提交工会申请
	required int32 unionId = 1;
}

message RequestReplyUnionCommand {//回复公会申请
	repeated int64 id = 1;
	required bool receive = 2;
}

message RequestHandleUnionMemberCommand {//调整工会成员权限
	required int64 id = 1;
	required int32 job = 2;
}

message RequestUpgradeUnionCommand {//升级工会
}

message RequestQuitUnionCommand {//退出工会
	optional int64 id = 1;
}

message RequestUnionInfoCommand {//工会
}

message RequestAttackUnionCommand {//进攻其他工会
	optional int32 unionId = 1;
	required int32 teamid = 2;
}

message RequestDefendUnionCommand {//防守其他工会
	required int32 teamid = 2;
}

message ResponseUnionInfoCommand {
	optional Union union = 1;
}

message RequestUnionListCommand {
}

message ResponseUnionListCommand {
	repeated Union union = 1;
}

message RequestMessageBoardListCommand { //获取所有留言板信息
	required int32 type = 1; //1:普通的 2:工会的
}

message ResponseMessageBoardListCommand {
	required int32 type = 1;
	repeated MessageBoard messageBoard = 2;
}

message RequestCreateMessageBoardCommand { //创建一个新的留言板
	required int32 type = 1;
	required string message = 2;
}

message RequestReplyMessageCommand { //回复留言板
	required int32 type = 1;
	required int64 timestamp = 2;
	required string message = 3;
}

message ResponseMessageBoardCommand {
	required int32 type = 1;
	required MessageBoard messageBoard = 2;
}

message RequestDailyShopCommand{//普通商店
}
message RequestDailyShopPurchaseCommand{//普通商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestDailyShopRefreshCommand{//普通商店刷新
}
message ResponseDailyShopCommand{
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestShopCommand {//商城
}
message RequestShopPurchaseCommand {//商城购买
	required int32 id = 1;//商品ID
}
message ResponseShopCommand {
	repeated Commodity items = 1;//商品列表
}

message RequestBlackShopCommand {//黑市
}
message RequestBlackShopPurchaseCommand {//黑市购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestBlackShopRefreshCommand {//黑市刷新
}
message ResponseBlackShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestUnionShopCommand {//工会商店
}
message RequestUnionShopPurchaseCommand {//工会商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestUnionShopRefreshCommand {//工会商店刷新
}
message ResponseUnionShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestPVPShopCommand {//挂机PVP商店
}
message RequestPVPShopPurchaseCommand {//挂机PVP商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestPVPShopRefreshCommand {//挂机PVP商店刷新
}
message ResponsePVPShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestExpeditionShopCommand {//远征商店
}
message RequestExpeditionShopPurchaseCommand {//远征商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestExpeditionShopRefreshCommand {//远征商店刷新
}
message ResponseExpeditionShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestLadderShopCommand {//天梯商店
}
message RequestLadderShopPurchaseCommand {//天梯商店购买
	required int32 index = 1;//第几个商品(0~7)
	required int32 id = 2;
}
message RequestLadderShopRefreshCommand {//天梯商店刷新
}
message ResponseLadderShopCommand {
	repeated Commodity items = 1;//商品列表
	optional int64 endTime = 2;//商品列表过期时间
	optional int32 refreshCost = 3;//刷新消耗
}

message RequestPurchaseCoinCommand {//点石成金(获得金币和经验)
}

message ResponsePurchaseCoinCommand {
	//optional int32 coin = 1;//获得的金币
	//optional int32 exp = 2;//获得的经验
	optional int32 jewel = 3;//价格
	optional int32 leftTime = 4;//当日剩余次数
}

message ResponseUserPropCommand { //玩家道具列表
	repeated UserProp userProp = 1;
}

message RequestUsePropCommand { //打开道具包
	required int32 propId = 1;
}

message ResponseUsePropCommand {
	required RewardInfo reward = 1;
}

message RequestFenjieEquipCommand {
	required int32 equipId = 1;
	required int32 equipCount = 2;
}

message ResponseFenjieEquipCommand {
	repeated RewardInfo reward = 1;
}

message RequestPVPMapListCommand {//挂机PVP列表
}

message RequestAttackPVPMonsterCommand {//pvp攻击怪物
	required int32 positionid = 1;
	optional bool ret = 2;
}

message RequestAttackPVPBossCommand {//pvp攻击BOSS
	required int32 positionid = 1;
	optional bool ret = 2;
}

message RequestPVPMineInfoCommand {//pvp矿点对手信息
	required int32 id = 1;
}

message RequestAttackPVPMineCommand {//攻击pvp矿点对手
	required int32 id = 1;
	required int32 teamid = 2;
	optional bool ret = 3;
}

message RequestHelpAttackPVPMineCommand {//攻击pvp矿点对手
	required int32 id = 1;
	required int32 teamid = 2;
	optional bool ret = 3;
	required int64 userId = 4;
}

message RequestSendMailCommand {
	required int64 toUserId = 1;
	required string content = 2;
	optional int32 relatedId = 3;
	required int32 type = 4; //5:call brother	
}

message RequestBrotherMineInfoCommand {
	required int32 id = 1;
	required int64 brotherId = 2;
}	

message RequestRefreshPVPMineCommand {//刷新pvp矿点对手
	required int32 id = 1;
}

message ResponsePVPMapListCommand {//挂机PVP列表
	repeated PVPMap field = 1;
}

message RequestSignCommand {
	
}

message ResponseSignCommand {
	repeated RewardInfo reward = 1;
}

message RequestFenjieHeroEquipCommand {
	required int32 heroId = 1;
	required int32 infoId = 2;
	required int32 armId = 3;
}

message RequestFenjieHeroCommand {
	required int32 heroId = 1;
	required int32 infoId = 2;
}

message RequestEnterMohuaMapCommand {//进入魔化之地

}

message RequestResetMohuaMapCommand {//重置魔化之地

}

message RequestUseMohuaCardCommand {//魔化之地模式中使用卡片
	repeated MohuaCard card = 1;
}

message ResponseMohuaUserDataCommand {
	required MohuaUserData user = 1;
}

message RequestCommand {
	required HeadInfo head = 1;
	optional RequestRegisterCommand registerCommand = 2;
	optional RequestLoginCommand loginCommand = 3;
	optional RequestLevelResultCommand levelResultCommand = 4;
	optional RequestUpdateTeamCommand updateTeamCommand = 5;
	optional RequestLevelStartCommand levelStartCommand = 6;
	optional RequestLevelLootStartCommand levelLootStartCommand = 7;
	optional RequestLevelLootResultCommand levelLootResultCommand = 8;
	optional RequestHeroLevelUpCommand heroLevelUpCommand = 9;
	optional RequestLockHeroCommand lockHeroCommand = 131;
	optional RequestLootResultCommand lootResultCommand = 10;
	optional RequestAddHeroEquipCommand addHeroEquipCommand = 11;
	optional RequestLotteryCommand lotteryCommand = 14;
	optional RequestGetLadderRankListCommand getLadderRankListCommand = 15;
	optional RequestGetUserLadderRankListCommand getUserLadderRankListCommand = 16;
	optional RequestAttackLadderModeCommand attackLadderModeCommand = 17;
	optional RequestGetUserMailListCommand getUserMailListCommand = 18;
	optional RequestReadMailCommand readMailCommand = 19;
	optional RequestDeleteMailCommand deleteMailCommand = 20;
	optional RequestAddFriendCommand addFriendCommand = 21;
	optional RequestReceiveFriendCommand receiveFriendCommand = 22;
	optional RequestEquipLevelUpCommand equipLevelUpCommand = 24;
	optional RequestAreaCommand areaCommand = 26;
	optional RequestAttackMonsterCommand attackMonsterCommand = 27;
	optional RequestAttackBossCommand attackBossCommand = 28;
	optional RequestAttackResourceCommand attackResourceCommand = 29;
	optional RequestAttackResourceMineCommand attackResourceMineCommand = 30;
	optional RequestAttackResourceMineInfoCommand attackResourceMineInfoCommand = 124;
	optional RequestQuitUnionCommand quitUnionCommand = 42;
	optional RequestUnionInfoCommand unionInfoCommand = 43;
	optional RequestUnionListCommand unionListCommand = 44;
	optional RequestCreateUnionCommand createUnionCommand = 31;
	optional RequestDeleteUnionCommand deleteUnionCommand = 39;
	optional RequestApplyUnionCommand applyUnionCommand = 32;
	optional RequestReplyUnionCommand replyUnionCommand = 33;
	optional RequestHandleUnionMemberCommand handleUnionCommand = 40;
	optional RequestUpgradeUnionCommand upgradeUnionCommand = 41;
	optional RequestAttackUnionCommand attackUnionCommand = 100;
	optional RequestDefendUnionCommand defendUnionCommand = 101;
	optional RequestDailyShopCommand dailyShopCommand = 102;
	optional RequestDailyShopPurchaseCommand dailyShopPurchaseCommand = 103;
	optional RequestDailyShopRefreshCommand dailyShopRefreshCommand = 104;
	optional RequestShopCommand shopCommand = 105;
	optional RequestShopPurchaseCommand shopPurchaseCommand = 106;
	optional RequestBlackShopCommand blackShopCommand = 107;
	optional RequestBlackShopPurchaseCommand blackShopPurchaseCommand = 108;
	optional RequestBlackShopRefreshCommand blackShopRefreshCommand = 109;
	optional RequestUnionShopCommand unionShopCommand = 110;
	optional RequestUnionShopPurchaseCommand unionShopPurchaseCommand = 111;
	optional RequestUnionShopRefreshCommand unionShopRefreshCommand = 112;
	optional RequestPVPShopCommand PVPShopCommand = 113;
	optional RequestPVPShopPurchaseCommand PVPShopPurchaseCommand = 114;
	optional RequestPVPShopRefreshCommand PVPShopRefreshCommand = 115;
	optional RequestExpeditionShopCommand expeditionShopCommand = 116;
	optional RequestExpeditionShopPurchaseCommand expeditionShopPurchaseCommand = 117;
	optional RequestExpeditionShopRefreshCommand expeditionShopRefreshCommand = 118;
	optional RequestLadderShopCommand ladderShopCommand = 119;
	optional RequestLadderShopPurchaseCommand ladderShopPurchaseCommand = 120;
	optional RequestLadderShopRefreshCommand ladderShopRefreshCommand = 121;
	optional RequestPurchaseCoinCommand purchaseCoinCommand = 122;
	optional RequestGetTeamCommand teamCommand = 123;
	optional RequestPVPMapListCommand pvpMapListCommand = 125;
	optional RequestAttackPVPMonsterCommand attackPVPMonsterCommand = 126;
	optional RequestAttackPVPBossCommand attackPVPBossCommand = 127;
	optional RequestPVPMineInfoCommand pvpMineInfoCommand = 128;
	optional RequestAttackPVPMineCommand attackPVPMineCommand = 129;
	optional RequestRefreshPVPMineCommand refreshPVPMineCommand = 130;
	//////////////////////////////////////////////////////
	optional RequestLevelPrepareCommand levelPrepareCommand = 34;
	optional RequestLevelPauseCommand levelPauseCommand = 35;
	optional RequestMessageBoardListCommand messageBoardListCommand = 36;
	optional RequestCreateMessageBoardCommand createMessageBoardCommand = 37;
	optional RequestReplyMessageCommand replyMessageCommand = 38;
	optional RequestAddTeamCommand addTeamCommand = 45;
	optional RequestUserTeamListCommand userTeamListCommand = 46;
	optional RequestGetLadderUserInfoCommand ladderUserInfoCommand = 47;
	optional RequestGetUserFriendListCommand userFriendListCommand = 48;
	optional RequestEquipComposeCommand equipComposeCommand = 50;
	optional RequestUsePropCommand usePropCommand = 51;
	optional RequestFenjieEquipCommand fenjieEquipCommand = 52;
	optional RequestSignCommand signCommand = 53;
	optional RequestFenjieHeroEquipCommand fenjieHeroEquipCommand = 54;
	optional RequestHelpAttackPVPMineCommand helpAttackPVPMineCommand = 55;
	optional RequestFenjieHeroCommand fenjieHeroCommand = 56;
	optional RequestResetHeroSkillCommand resetHeroSkillCommand = 57;
	optional RequestSendMailCommand sendMailCommand = 58;
	optional RequestBrotherMineInfoCommand brotherMineInfoCommand = 59;
	optional RequestEnterMohuaMapCommand enterMohuaMapCommand = 60;
	optional RequestResetMohuaMapCommand resetMohuaMapCommand = 61;
	optional RequestUseMohuaCardCommand useMohuaCardCommand = 62;
}
// response command list transfer only use it
message ResponseCommand {
	required HeadInfo head = 1;
	optional ErrorCommand errorCommand = 2;
	optional RewardCommand rewardCommand = 101;
	optional ResponseDailyShopCommand dailyShopCommand = 102;
	optional ResponseShopCommand shopCommand = 103;
	optional ResponseBlackShopCommand blackShopCommand = 104;
	optional ResponseUnionShopCommand unionShopCommand = 105;
	optional ResponsePVPShopCommand PVPShopCommand = 106;
	optional ResponseExpeditionShopCommand expeditionShopCommand = 107;
	optional ResponseLadderShopCommand ladderShopCommand = 108;
	optional ResponsePurchaseCoinCommand purchaseCoinCommand = 122;
	optional ResponseGetTeamCommand teamCommand = 123;
	optional ResponsePVPMapListCommand pvpMapListCommand = 125;
	////////////////////////////////////////////////////////
	optional ResponseNeedRegisterCommand needRegisterCommand = 3;
	optional ResponseUserInfoCommand userInfoCommand = 4;
	optional ResponseLevelResultCommand levelResultCommand = 6;
	optional ResponseLevelLootResultCommand levelLootResultCommand = 7;
	optional ResponseHeroResultCommand heroResultCommand = 8;
	optional ResponseLootResultCommand lootResultCommand = 9;
	optional ResponseLotteryCommand lotteryCommand = 13;
	optional ResponseGetUserHeroCommand getUserHeroCommand = 14;
	optional ResponseGetLadderRankListCommand getLadderRankListCommand = 15;
	optional ResponseGetUserLadderRankListCommand getUserLadderRankListCommand = 16;
	optional ResponseAttackLadderModeCommand attackLadderModeCommand = 17;
	optional ResponseGetUserMailListCommand getUserMailListCommand = 18;
	optional ResponseSendRewardCommand sendRewardCommand = 19;
	optional ResponseMessageCommand messageCommand = 20;
	optional ResponseGetUserFriendListCommand getUserFriendListCommand = 21;
	optional ResponseGetUserEquipCommand userEquipCommand = 23;
	optional ResponseAreaCommand areaCommand = 24;
	optional ResponseAttackResourceMineInfoCommand resourceMineInfoCommand = 124;
	optional ResponseUserLevelCommand userLevelCommand = 25;
	optional ResponseUserLootLevelCommand userLootLevelCommand = 26;
	optional ResponseUnionInfoCommand unionInfoCommand = 27;
	optional ResponseUnionListCommand unionListCommand = 28;
	optional ResponseMessageBoardListCommand messageBoardListCommand = 29;
	optional ResponseMessageBoardCommand messageBoardCommand = 30;
	optional ResponseUserTeamListCommand userTeamListCommand = 31;
	optional ResponseGetLadderUserInfoCommand ladderUserInfoCommand = 32;
	optional ResponseEquipComposeCommand equipComposeCommand = 33;
	optional ResponseUserPropCommand userPropCommand = 34;
	optional ResponseUsePropCommand usePropCommand = 35;
	optional ResponseFenjieEquipCommand fenjieEquipCommand = 36;
	optional ResponseSignCommand signCommand = 37;
	optional ResponseMohuaUserDataCommand mohuaUserDataCommand = 38;
}


