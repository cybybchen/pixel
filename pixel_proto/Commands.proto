package com.trans.pixel.protoc;

message UserInfo {
	required int64 id = 1;
	required string account = 2;
	required string userName = 3;
	required int32 serverId = 4;
	optional int32 jewel = 5;
	optional int32 coin = 6;
	optional int32 exp = 7;
	optional int32 pointVS = 8; //竞技场积分
	optional int32 pointLadder = 9; //天梯积分
	optional int32 pointExpedition = 10; //远征积分
	optional int32 pointUnion = 11; //联盟积分
	optional int32 completeLevel = 12;
}

message RewardInfo {
	required int32 itemId = 1;
	required string name = 2;
	required int32 count = 3;
}

message HeadInfo 
{
	required int32 version = 1;		//  0: version1.1.1 1: version1.2.0 2013-3-28
	required int64 datetime = 2;
	required int32 gameVersion = 3;
	required int32 serverId = 4;
	required string account = 5;
	optional int64 userId = 6;
}

message HeroInfo {
	required int32 infoId = 1;
	optional int32 level = 2;
	optional int32 starLevel = 3;
	optional int32 equipLevel = 4;
	optional int32 equipInfo = 5;
	repeated SkillInfo skill = 6;
}

message UserHero {
	required int64 userId = 1;
	required int32 heroId = 2;
	repeated HeroInfo heroInfo = 3;
}

message SkillInfo {
	required int32 skillId = 1;
	required int32 skillLevel = 2;
}

message UserMine {
	required int32 mapId = 1;
	required int32 mineId = 2;
	optional int64 relatedUserId = 3;
	optional int64 preventTime = 4;
	optional int32 level = 5;
}

message UserRank {
	required int64 userId = 1;
	required string userName = 2;
	required int64 rank = 3;
	required string teamRecord = 4;
}

message UserFriend {
	required int64 friendId = 1;
	required string friendName = 2;
	required string teamRecord = 3;
}

message Mail {
	required int32 id = 1;
	required int64 userId = 2;
	required int64 fromUserId = 3;
	required int32 type = 4;
	required string startDate = 5;
	required string endDate = 6;
	required string content = 7;
	repeated RewardInfo reward = 8;
}

message MailList {
	required int32 type = 1;
	repeated Mail mail = 2;
}

message ErrorCommand{
        required string code = 1;
        required string message = 2;
}

message ResponseNeedRegisterCommand {

}

message RequestRegisterCommand {
	required string userName = 1;
}

message RequestLoginCommand {

}

message ResponseUserInfoCommand {
	required UserInfo user = 1;
}

message ResponsePopupCommand {
	required int32 popScreen = 1;//1. main menu; 2. career world map;
	optional string flowID = 2;
	required string text = 3;
	optional string heading = 4;
	optional string yesButtonID = 5;
	optional string noButtonID = 6;
}

message RequestLevelStartCommand {
	required int32 levelId = 1;
}

message RequestLevelResultCommand {
	required int32 levelId = 1;
	required string teamInfo = 2;
	required string fightInfo = 3;
}

message ResponseLevelResultCommand {
	repeated RewardInfo reward = 1;
}

message RequestLevelLootStartCommand {
	required int32 levelId = 1;
}

message RequestLevelLootResultCommand {

}

message ResponseLevelLootResultCommand {
	repeated RewardInfo reward = 1;
}

message RequestUpdateTeamCommand {
	required int32 mode = 1;
	required string teamInfo = 2;
}

message RequestHeroLevelUpCommand {
	required int32 levelUpType = 1; //1:level 2:star 3:equip
	required int32 heroId = 2;
	required int32 infoId = 3;
}

message ResponseHeroResultCommand {
	required int32 heroId = 1;
	required HeroInfo heroInfo = 2;
}

message RequestLootResultCommand {

}

message ResponseLootResultCommand {
	optional int32 gold = 1;
	optional int32 exp = 2;
	optional int32 lastLootTime = 3;
}

message RequestAddHeroEquipCommand {
	required int32 heroId = 1;
	required int32 infoId = 2;
	optional int32 armId = 3;
}

message RequestAttackRelativeCommand {
	required int32 mapId = 1;
	required int32 mineId = 2;
}

message ResponseAttackRelativeCommand {
	required int32 mapId = 1;
	required int32 mineId = 2;
	required int64 preventTime = 3;
	required int32 level = 4;
}

message ResponseGetUserMineCommand {
	repeated UserMine userMine = 1;
}

message RequestRefreshRelatedUserCommand {
	required int32 mapId = 1;
	required int32 mineId = 2;
}

message ResponseRefreshRelatedUserCommand {
	required int32 leftTimes = 1;
	required int64 relatedUserId = 2;
}

message RequestLotteryHeroCommand {
	required int32 type = 1; //1001:jinbi 1002:zuanshi
}

message ResponseLotteryHeroCommand {
	optional int32 coin = 1;
	optional int32 jewel = 2;
	repeated RewardInfo rewardList = 3;
}

message RequestLotteryEquipCommand {
        required int32 type = 1; //1001:jinbi 1002:zuanshi
}

message ResponseLotteryEquipCommand {
        optional int32 coin = 1;
        optional int32 jewel = 2;
        repeated RewardInfo rewardList = 3;
}


message ResponseGetUserHeroCommand {
	repeated UserHero userHero = 1;
}

message RequestGetLadderRankListCommand {

}

message RequestGetUserLadderRankListCommand {

}

message ResponseGetLadderRankListCommand {
	repeated UserRank userRank = 1;
}

message ResponseGetUserLadderRankListCommand {
	repeated UserRank userRank = 1;
}

message RequestAttackLadderModeCommand {
	required int64 rank = 1;
}

message ResponseAttackLadderModeCommand {
	required bool ret = 1;
	required string msg = 2;
}

message RequestGetUserMailListCommand {
	required int32 type = 1;
}

message ResponseGetUserMailListCommand {
	repeated MailList mailList = 1;
}

message RequestReadMailCommand {
	required int32 type = 1;
	repeated int32 id = 2;
}

message ResponseMessageCommand {
	required int32 code = 1;
	required string msg = 2;
}

message ResponseSendRewardCommand {
	repeated RewardInfo reward = 1;
}

message RequestDeleteMailCommand {
	required int32 type = 1;
	repeated int32 id = 2;	
}

message RequestAddFriendCommand {
	required int64 userId = 1;
}

message RequestReceiveFriendCommand {
	repeated int32 id = 1;
}

message ResponseGetUserFriendListCommand {
	repeated UserFriend friend = 1;	
}

message RequestCommand {
	required HeadInfo head = 1;
	optional RequestRegisterCommand registerCommand = 2;
	optional RequestLoginCommand loginCommand = 3;
	optional RequestLevelResultCommand levelResultCommand = 4;
	optional RequestUpdateTeamCommand updateTeamCommand = 5;
	optional RequestLevelStartCommand levelStartCommand = 6;
	optional RequestLevelLootStartCommand levelLootStartCommand = 7;
	optional RequestLevelLootResultCommand levelLootResultCommand = 8;
	optional RequestHeroLevelUpCommand heroLevelUpCommand = 9;
	optional RequestLootResultCommand lootResultCommand = 10;
	optional RequestAddHeroEquipCommand addHeroEquipCommand = 11;
	optional RequestAttackRelativeCommand attackRelativeCommand = 12;
	optional RequestRefreshRelatedUserCommand refreshRelatedUserCommand = 13;
	optional RequestLotteryHeroCommand lotteryHeroCommand = 14;
	optional RequestGetLadderRankListCommand getLadderRankListCommand = 15;
	optional RequestGetUserLadderRankListCommand getUserLadderRankListCommand = 16;
	optional RequestAttackLadderModeCommand attackLadderModeCommand = 17;
	optional RequestGetUserMailListCommand getUserMailListCommand = 18;
	optional RequestReadMailCommand readMailCommand = 19;
	optional RequestDeleteMailCommand deleteMailCommand = 20;
	optional RequestAddFriendCommand addFriendCommand = 21;
	optional RequestReceiveFriendCommand receiveFriendCommand = 22;
	optional RequestLotteryEquipCommand lotteryEquipCommand = 23;
}
// response command list transfer only use it
message ResponseCommand {
	required HeadInfo head = 1;
	optional ErrorCommand errorCommand = 2;
	optional ResponseNeedRegisterCommand needRegisterCommand = 3;
	optional ResponseUserInfoCommand userInfoCommand = 4;
	optional ResponseLevelResultCommand levelResultCommand = 6;
	optional ResponseLevelLootResultCommand levelLootResultCommand = 7;
	optional ResponseHeroResultCommand heroResultCommand = 8;
	optional ResponseLootResultCommand lootResultCommand = 9;
	optional ResponseAttackRelativeCommand attackRelativeCommand = 10;
	optional ResponseGetUserMineCommand getUserMineCommand = 11;
	optional ResponseRefreshRelatedUserCommand refreshRelatedUserCommand = 12;
	optional ResponseLotteryHeroCommand lotteryHeroCommand = 13;
	optional ResponseGetUserHeroCommand getUserHeroCommand = 14;
	optional ResponseGetLadderRankListCommand getLadderRankListCommand = 15;
	optional ResponseGetUserLadderRankListCommand getUserLadderRankListCommand = 16;
	optional ResponseAttackLadderModeCommand attackLadderModeCommand = 17;
	optional ResponseGetUserMailListCommand getUserMailListCommand = 18;
	optional ResponseSendRewardCommand sendRewardCommand = 19;
	optional ResponseMessageCommand messageCommand = 20;
	optional ResponseGetUserFriendListCommand getUserFriendListCommand = 21;
	optional ResponseLotteryEquipCommand lotteryEquipCommand = 22;
}


